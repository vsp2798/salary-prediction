{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "       #########################  SALARY PREDICTION  #############################"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "STEP 1: CLEANINING OF DATA\n",
    "\n",
    " a) Finding all missing NAN values and imputing them with various methods like mode, mean and mode.\n",
    " \n",
    " b) converting categorical data to numerical data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import random \n",
    "Salaries = pd.read_csv(\"multipleChoiceResponses.csv\", low_memory = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.dropna(subset=['Q9'],inplace=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['What is your current yearly compensation (approximate $USD)?',\n",
       "       '10-20,000', '0-10,000',\n",
       "       'I do not wish to disclose my approximate yearly compensation',\n",
       "       '20-30,000', '125-150,000', '30-40,000', '50-60,000',\n",
       "       '100-125,000', '90-100,000', '70-80,000', '80-90,000', '60-70,000',\n",
       "       '400-500,000', '40-50,000', '150-200,000', '500,000+',\n",
       "       '300-400,000', '200-250,000', '250-300,000'], dtype=object)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Salaries.Q9.unique() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries = Salaries[Salaries['Q9']!= \"I do not wish to disclose my approximate yearly compensation\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.loc[1:,'index'] = Salaries[1:].reset_index().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.to_csv(\"Kaggle_Salary_clean.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3058: DtypeWarning: Columns (1,3,9,11,22,24,25,26,27,28,29,45,57,65,84,86,88,108,110,124,126,151,195,209,224,250,263,265,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,305,307,323,326,327,330,342,372,385,386,394,395) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">Unnamed: 0</th>\n",
       "      <th colspan=\"8\" halign=\"left\">index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Q2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>18-21</td>\n",
       "      <td>1363.0</td>\n",
       "      <td>11542.128393</td>\n",
       "      <td>7345.729574</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4814.50</td>\n",
       "      <td>11472.0</td>\n",
       "      <td>18291.00</td>\n",
       "      <td>23842.0</td>\n",
       "      <td>1363.0</td>\n",
       "      <td>8113.482025</td>\n",
       "      <td>4927.024899</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3588.50</td>\n",
       "      <td>8512.0</td>\n",
       "      <td>12770.00</td>\n",
       "      <td>15423.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22-24</td>\n",
       "      <td>2894.0</td>\n",
       "      <td>11296.958880</td>\n",
       "      <td>6979.080163</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5226.75</td>\n",
       "      <td>10961.0</td>\n",
       "      <td>17355.25</td>\n",
       "      <td>23857.0</td>\n",
       "      <td>2894.0</td>\n",
       "      <td>7990.472702</td>\n",
       "      <td>4680.877875</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3917.00</td>\n",
       "      <td>8128.0</td>\n",
       "      <td>12262.50</td>\n",
       "      <td>15428.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25-29</td>\n",
       "      <td>4278.0</td>\n",
       "      <td>10819.503974</td>\n",
       "      <td>6649.448596</td>\n",
       "      <td>13.0</td>\n",
       "      <td>5138.50</td>\n",
       "      <td>10312.0</td>\n",
       "      <td>16142.25</td>\n",
       "      <td>23836.0</td>\n",
       "      <td>4278.0</td>\n",
       "      <td>7701.018700</td>\n",
       "      <td>4477.858797</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3844.50</td>\n",
       "      <td>7633.5</td>\n",
       "      <td>11599.75</td>\n",
       "      <td>15420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>30-34</td>\n",
       "      <td>2819.0</td>\n",
       "      <td>10587.398013</td>\n",
       "      <td>6445.015946</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5060.50</td>\n",
       "      <td>10082.0</td>\n",
       "      <td>15398.50</td>\n",
       "      <td>23854.0</td>\n",
       "      <td>2819.0</td>\n",
       "      <td>7558.115644</td>\n",
       "      <td>4342.217432</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3784.00</td>\n",
       "      <td>7458.0</td>\n",
       "      <td>11196.50</td>\n",
       "      <td>15426.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35-39</td>\n",
       "      <td>1637.0</td>\n",
       "      <td>10449.713500</td>\n",
       "      <td>6285.787376</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5122.00</td>\n",
       "      <td>10151.0</td>\n",
       "      <td>14735.00</td>\n",
       "      <td>23824.0</td>\n",
       "      <td>1637.0</td>\n",
       "      <td>7483.777031</td>\n",
       "      <td>4257.462958</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3830.00</td>\n",
       "      <td>7510.0</td>\n",
       "      <td>10853.00</td>\n",
       "      <td>15417.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>40-44</td>\n",
       "      <td>989.0</td>\n",
       "      <td>10598.187058</td>\n",
       "      <td>6269.268360</td>\n",
       "      <td>12.0</td>\n",
       "      <td>5389.00</td>\n",
       "      <td>10387.0</td>\n",
       "      <td>14840.00</td>\n",
       "      <td>23817.0</td>\n",
       "      <td>989.0</td>\n",
       "      <td>7587.144590</td>\n",
       "      <td>4234.625543</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4043.00</td>\n",
       "      <td>7693.0</td>\n",
       "      <td>10904.00</td>\n",
       "      <td>15414.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>45-49</td>\n",
       "      <td>602.0</td>\n",
       "      <td>10788.295681</td>\n",
       "      <td>5916.809981</td>\n",
       "      <td>101.0</td>\n",
       "      <td>5835.00</td>\n",
       "      <td>10664.5</td>\n",
       "      <td>14277.75</td>\n",
       "      <td>23855.0</td>\n",
       "      <td>602.0</td>\n",
       "      <td>7753.436877</td>\n",
       "      <td>4006.213129</td>\n",
       "      <td>81.0</td>\n",
       "      <td>4380.50</td>\n",
       "      <td>7910.5</td>\n",
       "      <td>10566.75</td>\n",
       "      <td>15427.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50-54</td>\n",
       "      <td>403.0</td>\n",
       "      <td>10426.970223</td>\n",
       "      <td>5806.371111</td>\n",
       "      <td>137.0</td>\n",
       "      <td>5536.00</td>\n",
       "      <td>10388.0</td>\n",
       "      <td>13910.50</td>\n",
       "      <td>23694.0</td>\n",
       "      <td>403.0</td>\n",
       "      <td>7515.357320</td>\n",
       "      <td>3948.361960</td>\n",
       "      <td>108.0</td>\n",
       "      <td>4157.00</td>\n",
       "      <td>7694.0</td>\n",
       "      <td>10306.50</td>\n",
       "      <td>15351.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>55-59</td>\n",
       "      <td>222.0</td>\n",
       "      <td>9876.518018</td>\n",
       "      <td>5798.601152</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4685.00</td>\n",
       "      <td>10215.0</td>\n",
       "      <td>13542.75</td>\n",
       "      <td>23691.0</td>\n",
       "      <td>222.0</td>\n",
       "      <td>7133.995495</td>\n",
       "      <td>3964.981445</td>\n",
       "      <td>14.0</td>\n",
       "      <td>3486.25</td>\n",
       "      <td>7561.0</td>\n",
       "      <td>10028.25</td>\n",
       "      <td>15349.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60-69</td>\n",
       "      <td>180.0</td>\n",
       "      <td>9418.294444</td>\n",
       "      <td>5364.756583</td>\n",
       "      <td>93.0</td>\n",
       "      <td>4995.50</td>\n",
       "      <td>9588.0</td>\n",
       "      <td>13046.50</td>\n",
       "      <td>23470.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>6852.888889</td>\n",
       "      <td>3733.349024</td>\n",
       "      <td>75.0</td>\n",
       "      <td>3735.00</td>\n",
       "      <td>7080.5</td>\n",
       "      <td>9668.25</td>\n",
       "      <td>15254.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>70-79</td>\n",
       "      <td>26.0</td>\n",
       "      <td>9425.153846</td>\n",
       "      <td>5722.433340</td>\n",
       "      <td>1885.0</td>\n",
       "      <td>4965.25</td>\n",
       "      <td>7908.0</td>\n",
       "      <td>12300.00</td>\n",
       "      <td>22946.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>6796.461538</td>\n",
       "      <td>3788.893646</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>3710.00</td>\n",
       "      <td>5930.5</td>\n",
       "      <td>9119.75</td>\n",
       "      <td>14976.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>80+</td>\n",
       "      <td>16.0</td>\n",
       "      <td>12203.375000</td>\n",
       "      <td>6037.760257</td>\n",
       "      <td>403.0</td>\n",
       "      <td>7249.75</td>\n",
       "      <td>13194.5</td>\n",
       "      <td>16036.25</td>\n",
       "      <td>23061.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>8753.375000</td>\n",
       "      <td>4069.201541</td>\n",
       "      <td>266.0</td>\n",
       "      <td>5479.25</td>\n",
       "      <td>9771.5</td>\n",
       "      <td>11542.75</td>\n",
       "      <td>15038.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Unnamed: 0                                     \\\n",
       "                                 count          mean          std     min   \n",
       "Q2                                                                          \n",
       "18-21                           1363.0  11542.128393  7345.729574     8.0   \n",
       "22-24                           2894.0  11296.958880  6979.080163     5.0   \n",
       "25-29                           4278.0  10819.503974  6649.448596    13.0   \n",
       "30-34                           2819.0  10587.398013  6445.015946     2.0   \n",
       "35-39                           1637.0  10449.713500  6285.787376     7.0   \n",
       "40-44                            989.0  10598.187058  6269.268360    12.0   \n",
       "45-49                            602.0  10788.295681  5916.809981   101.0   \n",
       "50-54                            403.0  10426.970223  5806.371111   137.0   \n",
       "55-59                            222.0   9876.518018  5798.601152    20.0   \n",
       "60-69                            180.0   9418.294444  5364.756583    93.0   \n",
       "70-79                             26.0   9425.153846  5722.433340  1885.0   \n",
       "80+                               16.0  12203.375000  6037.760257   403.0   \n",
       "What is your age (# years)?        1.0      0.000000          NaN     0.0   \n",
       "\n",
       "                                                                   index  \\\n",
       "                                 25%      50%       75%      max   count   \n",
       "Q2                                                                         \n",
       "18-21                        4814.50  11472.0  18291.00  23842.0  1363.0   \n",
       "22-24                        5226.75  10961.0  17355.25  23857.0  2894.0   \n",
       "25-29                        5138.50  10312.0  16142.25  23836.0  4278.0   \n",
       "30-34                        5060.50  10082.0  15398.50  23854.0  2819.0   \n",
       "35-39                        5122.00  10151.0  14735.00  23824.0  1637.0   \n",
       "40-44                        5389.00  10387.0  14840.00  23817.0   989.0   \n",
       "45-49                        5835.00  10664.5  14277.75  23855.0   602.0   \n",
       "50-54                        5536.00  10388.0  13910.50  23694.0   403.0   \n",
       "55-59                        4685.00  10215.0  13542.75  23691.0   222.0   \n",
       "60-69                        4995.50   9588.0  13046.50  23470.0   180.0   \n",
       "70-79                        4965.25   7908.0  12300.00  22946.0    26.0   \n",
       "80+                          7249.75  13194.5  16036.25  23061.0    16.0   \n",
       "What is your age (# years)?     0.00      0.0      0.00      0.0     0.0   \n",
       "\n",
       "                                                                        \\\n",
       "                                    mean          std     min      25%   \n",
       "Q2                                                                       \n",
       "18-21                        8113.482025  4927.024899     4.0  3588.50   \n",
       "22-24                        7990.472702  4680.877875     2.0  3917.00   \n",
       "25-29                        7701.018700  4477.858797     7.0  3844.50   \n",
       "30-34                        7558.115644  4342.217432     0.0  3784.00   \n",
       "35-39                        7483.777031  4257.462958     3.0  3830.00   \n",
       "40-44                        7587.144590  4234.625543     6.0  4043.00   \n",
       "45-49                        7753.436877  4006.213129    81.0  4380.50   \n",
       "50-54                        7515.357320  3948.361960   108.0  4157.00   \n",
       "55-59                        7133.995495  3964.981445    14.0  3486.25   \n",
       "60-69                        6852.888889  3733.349024    75.0  3735.00   \n",
       "70-79                        6796.461538  3788.893646  1320.0  3710.00   \n",
       "80+                          8753.375000  4069.201541   266.0  5479.25   \n",
       "What is your age (# years)?          NaN          NaN     NaN      NaN   \n",
       "\n",
       "                                                        \n",
       "                                50%       75%      max  \n",
       "Q2                                                      \n",
       "18-21                        8512.0  12770.00  15423.0  \n",
       "22-24                        8128.0  12262.50  15428.0  \n",
       "25-29                        7633.5  11599.75  15420.0  \n",
       "30-34                        7458.0  11196.50  15426.0  \n",
       "35-39                        7510.0  10853.00  15417.0  \n",
       "40-44                        7693.0  10904.00  15414.0  \n",
       "45-49                        7910.5  10566.75  15427.0  \n",
       "50-54                        7694.0  10306.50  15351.0  \n",
       "55-59                        7561.0  10028.25  15349.0  \n",
       "60-69                        7080.5   9668.25  15254.0  \n",
       "70-79                        5930.5   9119.75  14976.0  \n",
       "80+                          9771.5  11542.75  15038.0  \n",
       "What is your age (# years)?     NaN       NaN      NaN  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('Kaggle_Salary_clean.csv')\n",
    "df.groupby('Q2').describe()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Have removed 'OTHER_TEXT' columns as they are insignificant to the data set . "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3',\n",
       "       'Q4', 'Q5', 'Q6', 'Q7', 'Q8',\n",
       "       ...\n",
       "       'Q49_Part_12', 'Q50_Part_1', 'Q50_Part_2', 'Q50_Part_3', 'Q50_Part_4',\n",
       "       'Q50_Part_5', 'Q50_Part_6', 'Q50_Part_7', 'Q50_Part_8', 'index'],\n",
       "      dtype='object', length=368)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wot = [i for i in df.columns if i.endswith('_OTHER_TEXT')]\n",
    "salary = df\n",
    "for k in wot:\n",
    "    salary = salary.drop(columns = [k])\n",
    "salary.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The number of columns have been decreased from 395 to 368 ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15430, 368)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.shape\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dropped index column which is float value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q49_Part_12</th>\n",
       "      <th>Q50_Part_1</th>\n",
       "      <th>Q50_Part_2</th>\n",
       "      <th>Q50_Part_3</th>\n",
       "      <th>Q50_Part_4</th>\n",
       "      <th>Q50_Part_5</th>\n",
       "      <th>Q50_Part_6</th>\n",
       "      <th>Q50_Part_7</th>\n",
       "      <th>Q50_Part_8</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Duration (in seconds)</td>\n",
       "      <td>What is your gender? - Selected Choice</td>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>In which country do you currently reside?</td>\n",
       "      <td>What is the highest level of formal education ...</td>\n",
       "      <td>Which best describes your undergraduate major?...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>In what industry is your current employer/cont...</td>\n",
       "      <td>How many years of experience do you have in yo...</td>\n",
       "      <td>...</td>\n",
       "      <td>What tools and methods do you use to make your...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>434</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Manufacturing/Fabrication</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>731</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>India</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not enough incentives to share my work</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>959</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Information technology, networking, or system ...</td>\n",
       "      <td>Other</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too expensive</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I had never considered making my work easier f...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 368 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 Time from Start to Finish (seconds)  \\\n",
       "0           0               Duration (in seconds)   \n",
       "1           2                                 434   \n",
       "2           3                                 718   \n",
       "3           5                                 731   \n",
       "4           7                                 959   \n",
       "\n",
       "                                       Q1                           Q2  \\\n",
       "0  What is your gender? - Selected Choice  What is your age (# years)?   \n",
       "1                                    Male                        30-34   \n",
       "2                                  Female                        30-34   \n",
       "3                                    Male                        22-24   \n",
       "4                                    Male                        35-39   \n",
       "\n",
       "                                          Q3  \\\n",
       "0  In which country do you currently reside?   \n",
       "1                                  Indonesia   \n",
       "2                   United States of America   \n",
       "3                                      India   \n",
       "4                                      Chile   \n",
       "\n",
       "                                                  Q4  \\\n",
       "0  What is the highest level of formal education ...   \n",
       "1                                  Bachelor’s degree   \n",
       "2                                    Master’s degree   \n",
       "3                                    Master’s degree   \n",
       "4                                    Doctoral degree   \n",
       "\n",
       "                                                  Q5  \\\n",
       "0  Which best describes your undergraduate major?...   \n",
       "1                 Engineering (non-computer focused)   \n",
       "2      Computer science (software engineering, etc.)   \n",
       "3                          Mathematics or statistics   \n",
       "4  Information technology, networking, or system ...   \n",
       "\n",
       "                                                  Q6  \\\n",
       "0  Select the title most similar to your current ...   \n",
       "1                                              Other   \n",
       "2                                     Data Scientist   \n",
       "3                                       Data Analyst   \n",
       "4                                              Other   \n",
       "\n",
       "                                                  Q7  \\\n",
       "0  In what industry is your current employer/cont...   \n",
       "1                          Manufacturing/Fabrication   \n",
       "2                                     I am a student   \n",
       "3                                     I am a student   \n",
       "4                                Academics/Education   \n",
       "\n",
       "                                                  Q8  ...  \\\n",
       "0  How many years of experience do you have in yo...  ...   \n",
       "1                                               5-10  ...   \n",
       "2                                                0-1  ...   \n",
       "3                                                0-1  ...   \n",
       "4                                              10-15  ...   \n",
       "\n",
       "                                         Q49_Part_12  \\\n",
       "0  What tools and methods do you use to make your...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_1  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                      Too expensive   \n",
       "\n",
       "                                          Q50_Part_2  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                 Too time-consuming   \n",
       "3                                 Too time-consuming   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_3  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_4  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_5  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3             Not enough incentives to share my work   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_6  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4  I had never considered making my work easier f...   \n",
       "\n",
       "                                          Q50_Part_7  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_8 index  \n",
       "0  What barriers prevent you from making your wor...   NaN  \n",
       "1                                                NaN   0.0  \n",
       "2                                                NaN   1.0  \n",
       "3                                                NaN   2.0  \n",
       "4                                                NaN   3.0  \n",
       "\n",
       "[5 rows x 368 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.drop(['index'], axis = 1)\n",
    "salary.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Exploring data frame: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finding the columns which have NaN values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q14_Part_1</th>\n",
       "      <th>Q14_Part_2</th>\n",
       "      <th>Q14_Part_3</th>\n",
       "      <th>Q14_Part_4</th>\n",
       "      <th>Q14_Part_5</th>\n",
       "      <th>Q14_Part_6</th>\n",
       "      <th>Q14_Part_7</th>\n",
       "      <th>Q14_Part_8</th>\n",
       "      <th>Q14_Part_9</th>\n",
       "      <th>Q14_Part_10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Duration (in seconds)</td>\n",
       "      <td>What is your gender? - Selected Choice</td>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>In which country do you currently reside?</td>\n",
       "      <td>What is the highest level of formal education ...</td>\n",
       "      <td>Which best describes your undergraduate major?...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>In what industry is your current employer/cont...</td>\n",
       "      <td>How many years of experience do you have in yo...</td>\n",
       "      <td>...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>434</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Manufacturing/Fabrication</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>731</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>India</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Azure Notebook</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>959</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Information technology, networking, or system ...</td>\n",
       "      <td>Other</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Google Colab</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15425</td>\n",
       "      <td>23844</td>\n",
       "      <td>1800</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>Kaggle Kernels</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Google Cloud Datalab</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15426</td>\n",
       "      <td>23845</td>\n",
       "      <td>129</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>Romania</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Student</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15427</td>\n",
       "      <td>23854</td>\n",
       "      <td>348</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Research Assistant</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15428</td>\n",
       "      <td>23855</td>\n",
       "      <td>575</td>\n",
       "      <td>Male</td>\n",
       "      <td>45-49</td>\n",
       "      <td>France</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Chief Officer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>Kaggle Kernels</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>JupyterHub/Binder</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15429</td>\n",
       "      <td>23857</td>\n",
       "      <td>370</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15430 rows × 50 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0 Time from Start to Finish (seconds)  \\\n",
       "0               0               Duration (in seconds)   \n",
       "1               2                                 434   \n",
       "2               3                                 718   \n",
       "3               5                                 731   \n",
       "4               7                                 959   \n",
       "...           ...                                 ...   \n",
       "15425       23844                                1800   \n",
       "15426       23845                                 129   \n",
       "15427       23854                                 348   \n",
       "15428       23855                                 575   \n",
       "15429       23857                                 370   \n",
       "\n",
       "                                           Q1                           Q2  \\\n",
       "0      What is your gender? - Selected Choice  What is your age (# years)?   \n",
       "1                                        Male                        30-34   \n",
       "2                                      Female                        30-34   \n",
       "3                                        Male                        22-24   \n",
       "4                                        Male                        35-39   \n",
       "...                                       ...                          ...   \n",
       "15425                                    Male                        30-34   \n",
       "15426                                    Male                        22-24   \n",
       "15427                                    Male                        30-34   \n",
       "15428                                    Male                        45-49   \n",
       "15429                                    Male                        22-24   \n",
       "\n",
       "                                              Q3  \\\n",
       "0      In which country do you currently reside?   \n",
       "1                                      Indonesia   \n",
       "2                       United States of America   \n",
       "3                                          India   \n",
       "4                                          Chile   \n",
       "...                                          ...   \n",
       "15425                                Netherlands   \n",
       "15426                                    Romania   \n",
       "15427                                     Turkey   \n",
       "15428                                     France   \n",
       "15429                                     Turkey   \n",
       "\n",
       "                                                      Q4  \\\n",
       "0      What is the highest level of formal education ...   \n",
       "1                                      Bachelor’s degree   \n",
       "2                                        Master’s degree   \n",
       "3                                        Master’s degree   \n",
       "4                                        Doctoral degree   \n",
       "...                                                  ...   \n",
       "15425                                    Master’s degree   \n",
       "15426                                    Master’s degree   \n",
       "15427                                    Doctoral degree   \n",
       "15428                                    Doctoral degree   \n",
       "15429                                    Master’s degree   \n",
       "\n",
       "                                                      Q5  \\\n",
       "0      Which best describes your undergraduate major?...   \n",
       "1                     Engineering (non-computer focused)   \n",
       "2          Computer science (software engineering, etc.)   \n",
       "3                              Mathematics or statistics   \n",
       "4      Information technology, networking, or system ...   \n",
       "...                                                  ...   \n",
       "15425      Computer science (software engineering, etc.)   \n",
       "15426                          Mathematics or statistics   \n",
       "15427      Computer science (software engineering, etc.)   \n",
       "15428      Computer science (software engineering, etc.)   \n",
       "15429      Computer science (software engineering, etc.)   \n",
       "\n",
       "                                                      Q6  \\\n",
       "0      Select the title most similar to your current ...   \n",
       "1                                                  Other   \n",
       "2                                         Data Scientist   \n",
       "3                                           Data Analyst   \n",
       "4                                                  Other   \n",
       "...                                                  ...   \n",
       "15425                                  Software Engineer   \n",
       "15426                                            Student   \n",
       "15427                                 Research Assistant   \n",
       "15428                                      Chief Officer   \n",
       "15429                                  Software Engineer   \n",
       "\n",
       "                                                      Q7  \\\n",
       "0      In what industry is your current employer/cont...   \n",
       "1                              Manufacturing/Fabrication   \n",
       "2                                         I am a student   \n",
       "3                                         I am a student   \n",
       "4                                    Academics/Education   \n",
       "...                                                  ...   \n",
       "15425                               Computers/Technology   \n",
       "15426                                     I am a student   \n",
       "15427                                Academics/Education   \n",
       "15428                               Computers/Technology   \n",
       "15429                               Computers/Technology   \n",
       "\n",
       "                                                      Q8  ...  \\\n",
       "0      How many years of experience do you have in yo...  ...   \n",
       "1                                                   5-10  ...   \n",
       "2                                                    0-1  ...   \n",
       "3                                                    0-1  ...   \n",
       "4                                                  10-15  ...   \n",
       "...                                                  ...  ...   \n",
       "15425                                              10-15  ...   \n",
       "15426                                                0-1  ...   \n",
       "15427                                               5-10  ...   \n",
       "15428                                               5-10  ...   \n",
       "15429                                                0-1  ...   \n",
       "\n",
       "                                              Q14_Part_1  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                     Kaggle Kernels   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                     Kaggle Kernels   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_2  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                           Google Colab   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_3  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                         Azure Notebook   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_4  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_5  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                               Google Cloud Datalab   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_6  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_7  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_8  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_9  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                  JupyterHub/Binder   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                             Q14_Part_10  \n",
       "0      Which of the following hosted notebooks have y...  \n",
       "1                                                   None  \n",
       "2                                                   None  \n",
       "3                                                    NaN  \n",
       "4                                                    NaN  \n",
       "...                                                  ...  \n",
       "15425                                                NaN  \n",
       "15426                                                NaN  \n",
       "15427                                                NaN  \n",
       "15428                                                NaN  \n",
       "15429                                                NaN  \n",
       "\n",
       "[15430 rows x 50 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.isnull().sum(axis = 0).iloc[0:50]\n",
    "salary.iloc[:, :50]\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From observing the NaN values for the first 50 columns, it is clear that most of the NaN values are in multiple choice questions. Now we'll try to plot the same in the heat map ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb8b634f490>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(salary.iloc[:,:50].isnull(), yticklabels = False, cbar = False, cmap = 'viridis')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                                 0\n",
       "Time from Start to Finish (seconds)        0\n",
       "Q1                                         0\n",
       "Q2                                         0\n",
       "Q3                                         0\n",
       "Q4                                         0\n",
       "Q5                                       135\n",
       "Q6                                         0\n",
       "Q7                                         0\n",
       "Q8                                        76\n",
       "Q9                                         0\n",
       "Q10                                      292\n",
       "Q11_Part_1                              7966\n",
       "Q11_Part_2                             11186\n",
       "Q11_Part_3                             11278\n",
       "Q11_Part_4                              9705\n",
       "Q11_Part_5                             11845\n",
       "Q11_Part_6                             12914\n",
       "Q11_Part_7                             14758\n",
       "Q12_MULTIPLE_CHOICE                     1572\n",
       "Q12_Part_1_TEXT                            0\n",
       "Q12_Part_2_TEXT                            0\n",
       "Q12_Part_3_TEXT                            0\n",
       "Q12_Part_4_TEXT                            0\n",
       "Q12_Part_5_TEXT                            0\n",
       "Q13_Part_1                              5177\n",
       "Q13_Part_2                              9066\n",
       "Q13_Part_3                             10238\n",
       "Q13_Part_4                             11755\n",
       "Q13_Part_5                             15325\n",
       "Q13_Part_6                             12525\n",
       "Q13_Part_7                             11535\n",
       "Q13_Part_8                             11839\n",
       "Q13_Part_9                              9747\n",
       "Q13_Part_10                            11002\n",
       "Q13_Part_11                            12199\n",
       "Q13_Part_12                            12908\n",
       "Q13_Part_13                            11580\n",
       "Q13_Part_14                            15100\n",
       "Q13_Part_15                            14487\n",
       "Q14_Part_1                             11075\n",
       "Q14_Part_2                             12866\n",
       "Q14_Part_3                             14463\n",
       "Q14_Part_4                             15330\n",
       "Q14_Part_5                             14477\n",
       "Q14_Part_6                             15071\n",
       "Q14_Part_7                             15170\n",
       "Q14_Part_8                             15326\n",
       "Q14_Part_9                             11850\n",
       "Q14_Part_10                             9943\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.isnull().sum(axis=0).iloc[:50]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The yellow marks in the plot shows the NaN values. Hence it can be observed that most of the mutliple choice columns have NaN values. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "REMOVING ROWS AND COLUMNS."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Removing rows based on countries . Countries have been filtered out on the basis of number of people who have been surveyed. \n",
    "\n",
    "Below is the countplot of all the number of people who have been surveyed from each country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'In which country do you currently reside?'),\n",
       " Text(0, 0, 'Indonesia'),\n",
       " Text(0, 0, 'United States of America'),\n",
       " Text(0, 0, 'India'),\n",
       " Text(0, 0, 'Chile'),\n",
       " Text(0, 0, 'Hungary'),\n",
       " Text(0, 0, 'France'),\n",
       " Text(0, 0, 'Argentina'),\n",
       " Text(0, 0, 'Japan'),\n",
       " Text(0, 0, 'Colombia'),\n",
       " Text(0, 0, 'Nigeria'),\n",
       " Text(0, 0, 'Spain'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'Iran, Islamic Republic of...'),\n",
       " Text(0, 0, 'United Kingdom of Great Britain and Northern Ireland'),\n",
       " Text(0, 0, 'Turkey'),\n",
       " Text(0, 0, 'Poland'),\n",
       " Text(0, 0, 'Kenya'),\n",
       " Text(0, 0, 'Denmark'),\n",
       " Text(0, 0, 'Netherlands'),\n",
       " Text(0, 0, 'Sweden'),\n",
       " Text(0, 0, 'Ukraine'),\n",
       " Text(0, 0, 'Canada'),\n",
       " Text(0, 0, 'Australia'),\n",
       " Text(0, 0, 'Russia'),\n",
       " Text(0, 0, 'Italy'),\n",
       " Text(0, 0, 'Mexico'),\n",
       " Text(0, 0, 'Germany'),\n",
       " Text(0, 0, 'I do not wish to disclose my location'),\n",
       " Text(0, 0, 'Singapore'),\n",
       " Text(0, 0, 'Brazil'),\n",
       " Text(0, 0, 'China'),\n",
       " Text(0, 0, 'South Africa'),\n",
       " Text(0, 0, 'South Korea'),\n",
       " Text(0, 0, 'Malaysia'),\n",
       " Text(0, 0, 'Hong Kong (S.A.R.)'),\n",
       " Text(0, 0, 'Portugal'),\n",
       " Text(0, 0, 'Thailand'),\n",
       " Text(0, 0, 'Morocco'),\n",
       " Text(0, 0, 'Pakistan'),\n",
       " Text(0, 0, 'Tunisia'),\n",
       " Text(0, 0, 'Ireland'),\n",
       " Text(0, 0, 'Israel'),\n",
       " Text(0, 0, 'Switzerland'),\n",
       " Text(0, 0, 'Bangladesh'),\n",
       " Text(0, 0, 'Romania'),\n",
       " Text(0, 0, 'Austria'),\n",
       " Text(0, 0, 'Belarus'),\n",
       " Text(0, 0, 'Viet Nam'),\n",
       " Text(0, 0, 'Czech Republic'),\n",
       " Text(0, 0, 'Philippines'),\n",
       " Text(0, 0, 'Belgium'),\n",
       " Text(0, 0, 'New Zealand'),\n",
       " Text(0, 0, 'Norway'),\n",
       " Text(0, 0, 'Finland'),\n",
       " Text(0, 0, 'Egypt'),\n",
       " Text(0, 0, 'Greece'),\n",
       " Text(0, 0, 'Peru'),\n",
       " Text(0, 0, 'Republic of Korea')]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(12,7))\n",
    "\n",
    "chart = sns.countplot(x = 'Q3', data = salary)\n",
    "type(chart)\n",
    "chart.set_xticklabels(chart.get_xticklabels(), rotation=90)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be observed that most of the countries are outliers. Countries where number of people who have been surveyed is less than 500 have been filtered out as they are less than 10% when compared with countries like India and USA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 368)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa = salary[salary['Q3'] == 'United States of America']\n",
    "india = salary[salary['Q3'] == 'India']\n",
    "china = salary[salary['Q3'] == 'China']\n",
    "other = salary[salary['Q3'] == 'Other']\n",
    "russia = salary[salary['Q3'] == 'Russia']\n",
    "brazil = salary[salary['Q3'] == 'Brazil']\n",
    "germany = salary[salary['Q3'] == 'Germany']\n",
    "\n",
    "countries = pd.concat([usa,india,china,other,russia,brazil,germany])\n",
    "\n",
    "countries.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the number of rows have been decreased to 8904 from 15430 rows. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since rows have been reduced down. Now we reduce the number of columns."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we will look into columns which has only single choice answers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                                0\n",
       "Time from Start to Finish (seconds)       0\n",
       "Q1                                        0\n",
       "Q2                                        0\n",
       "Q3                                        0\n",
       "Q4                                        0\n",
       "Q5                                       53\n",
       "Q6                                        0\n",
       "Q7                                        0\n",
       "Q8                                       41\n",
       "Q9                                        0\n",
       "Q10                                     160\n",
       "Q17                                    2474\n",
       "Q18                                    1086\n",
       "Q20                                    3433\n",
       "Q22                                    3678\n",
       "Q23                                    1171\n",
       "Q24                                    1181\n",
       "Q25                                    1199\n",
       "Q26                                    1205\n",
       "Q32                                    3050\n",
       "Q37                                    4715\n",
       "Q40                                    2262\n",
       "Q43                                    3276\n",
       "Q46                                    3227\n",
       "Q48                                    3219\n",
       "index                                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_columns = countries[['Unnamed: 0',\n",
    " 'Time from Start to Finish (seconds)',\n",
    " 'Q1',\n",
    " 'Q2',\n",
    " 'Q3',\n",
    " 'Q4',\n",
    " 'Q5',\n",
    " 'Q6',\n",
    " 'Q7',\n",
    " 'Q8',\n",
    " 'Q9',\n",
    " 'Q10','Q17','Q18','Q20','Q22',\n",
    " 'Q23',\n",
    " 'Q24',\n",
    " 'Q25',\n",
    " 'Q26', 'Q32','Q37','Q40','Q43','Q46','Q48','index']]\n",
    "\n",
    "single_columns.head()\n",
    "single_columns.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb8b67ba450>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(single_columns.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Can be observed that most of the NaN values are from Q17 to Q48."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "modeimputingcols = ['Q8','Q17','Q18','Q32','Q43']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now imputing mode and Nan values for the single choice columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For column Q8, since most of the people are inexperienced ( from 0 to 1 year experience ). The Null values in the columns are substitued by the mode of the columns which is 0-1 years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "41\n"
     ]
    }
   ],
   "source": [
    "print(countries['Q8'].isnull().sum())\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, '0-1'),\n",
       " Text(0, 0, '5-10'),\n",
       " Text(0, 0, '1-2'),\n",
       " Text(0, 0, '2-3'),\n",
       " Text(0, 0, '3-4'),\n",
       " Text(0, 0, '10-15'),\n",
       " Text(0, 0, '4-5'),\n",
       " Text(0, 0, '30 +'),\n",
       " Text(0, 0, '25-30'),\n",
       " Text(0, 0, '15-20'),\n",
       " Text(0, 0, '20-25')]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "\n",
    "colQ8 = sns.countplot(x = 'Q8', data = countries)\n",
    "type(colQ8)\n",
    "colQ8.set_xticklabels(colQ8.get_xticklabels(), rotation=90)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "likewise , let us look at Q17."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Java'),\n",
       " Text(0, 0, 'Python'),\n",
       " Text(0, 0, 'SQL'),\n",
       " Text(0, 0, 'C/C++'),\n",
       " Text(0, 0, 'R'),\n",
       " Text(0, 0, 'C#/.NET'),\n",
       " Text(0, 0, 'Visual Basic/VBA'),\n",
       " Text(0, 0, 'Scala'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'Javascript/Typescript'),\n",
       " Text(0, 0, 'SAS/STATA'),\n",
       " Text(0, 0, 'PHP'),\n",
       " Text(0, 0, 'Bash'),\n",
       " Text(0, 0, 'MATLAB'),\n",
       " Text(0, 0, 'Ruby'),\n",
       " Text(0, 0, 'Go'),\n",
       " Text(0, 0, 'Julia')]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "\n",
    "colQ17 = sns.countplot(x = 'Q17', data = countries)\n",
    "type(colQ17)\n",
    "colQ17.set_xticklabels(colQ17.get_xticklabels(), rotation=90)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For column Q18, since nearly 70% of the options chosen is python than any other programming language. Imputing the 45 NaN values ( which is harldy 0.5 % of the total number of values) would be a good fit than applying NaN values.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Python        5906\n",
       "R              935\n",
       "SQL            444\n",
       "C++            126\n",
       "MATLAB          98\n",
       "Java            75\n",
       "Other           75\n",
       "None            45\n",
       "SAS             35\n",
       "Javascript      28\n",
       "Scala           28\n",
       "VBA             14\n",
       "Go               9\n",
       "Name: Q18, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "countries['Q18'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Python'),\n",
       " Text(0, 0, 'SQL'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'R'),\n",
       " Text(0, 0, 'C++'),\n",
       " Text(0, 0, 'Javascript'),\n",
       " Text(0, 0, 'SAS'),\n",
       " Text(0, 0, 'MATLAB'),\n",
       " Text(0, 0, 'Java'),\n",
       " Text(0, 0, 'None'),\n",
       " Text(0, 0, 'VBA'),\n",
       " Text(0, 0, 'Scala'),\n",
       " Text(0, 0, 'Go')]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "\n",
    "colQ18 = sns.countplot(x = 'Q18', data = countries)\n",
    "type(colQ18)\n",
    "colQ18.set_xticklabels(colQ18.get_xticklabels(), rotation=90)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "#countries['Q32'].unique()\n",
    "#countries['Q43'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "countries['Q8'].fillna(countries['Q8'].mode()[0],inplace=True)\n",
    "countries['Q17'].fillna(countries['Q17'].mode()[0],inplace=True)\n",
    "countries['Q18'].fillna(countries['Q18'].mode()[0],inplace=True)\n",
    "countries['Q32'].fillna(countries['Q32'].mode()[0],inplace=True)\n",
    "countries['Q43'].fillna(countries['Q43'].mode()[0],inplace=True)\n",
    "countries['Q46'].fillna(countries['Q43'].mode()[0],inplace=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q49_Part_12</th>\n",
       "      <th>Q50_Part_1</th>\n",
       "      <th>Q50_Part_2</th>\n",
       "      <th>Q50_Part_3</th>\n",
       "      <th>Q50_Part_4</th>\n",
       "      <th>Q50_Part_5</th>\n",
       "      <th>Q50_Part_6</th>\n",
       "      <th>Q50_Part_7</th>\n",
       "      <th>Q50_Part_8</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>823</td>\n",
       "      <td>Male</td>\n",
       "      <td>40-44</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>Other</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not enough incentives to share my work</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>1917</td>\n",
       "      <td>Male</td>\n",
       "      <td>25-29</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Research Assistant</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>1-2</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>2150</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Some college/university study without earning ...</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Military/Security/Defense</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>1327</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>A business discipline (accounting, economics, ...</td>\n",
       "      <td>Manager</td>\n",
       "      <td>Insurance/Risk Assessment</td>\n",
       "      <td>2-3</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too expensive</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Requires too much technical knowledge</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 368 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0 Time from Start to Finish (seconds)      Q1     Q2  \\\n",
       "2            3                                 718  Female  30-34   \n",
       "7           12                                 823    Male  40-44   \n",
       "9           14                                1917    Male  25-29   \n",
       "14          19                                2150    Male  35-39   \n",
       "17          23                                1327    Male  30-34   \n",
       "\n",
       "                          Q3  \\\n",
       "2   United States of America   \n",
       "7   United States of America   \n",
       "9   United States of America   \n",
       "14  United States of America   \n",
       "17  United States of America   \n",
       "\n",
       "                                                   Q4  \\\n",
       "2                                     Master’s degree   \n",
       "7                                     Master’s degree   \n",
       "9                                   Bachelor’s degree   \n",
       "14  Some college/university study without earning ...   \n",
       "17                                  Bachelor’s degree   \n",
       "\n",
       "                                                   Q5                  Q6  \\\n",
       "2       Computer science (software engineering, etc.)      Data Scientist   \n",
       "7                  Engineering (non-computer focused)      Data Scientist   \n",
       "9                           Mathematics or statistics  Research Assistant   \n",
       "14      Computer science (software engineering, etc.)               Other   \n",
       "17  A business discipline (accounting, economics, ...             Manager   \n",
       "\n",
       "                           Q7    Q8  ... Q49_Part_12     Q50_Part_1  \\\n",
       "2              I am a student   0-1  ...         NaN            NaN   \n",
       "7                       Other  5-10  ...         NaN            NaN   \n",
       "9         Academics/Education   1-2  ...         NaN            NaN   \n",
       "14  Military/Security/Defense  5-10  ...         NaN            NaN   \n",
       "17  Insurance/Risk Assessment   2-3  ...         NaN  Too expensive   \n",
       "\n",
       "            Q50_Part_2                             Q50_Part_3 Q50_Part_4  \\\n",
       "2   Too time-consuming                                    NaN        NaN   \n",
       "7   Too time-consuming                                    NaN        NaN   \n",
       "9   Too time-consuming                                    NaN        NaN   \n",
       "14  Too time-consuming                                    NaN        NaN   \n",
       "17                 NaN  Requires too much technical knowledge        NaN   \n",
       "\n",
       "                                Q50_Part_5 Q50_Part_6 Q50_Part_7 Q50_Part_8  \\\n",
       "2                                      NaN        NaN        NaN        NaN   \n",
       "7   Not enough incentives to share my work        NaN        NaN        NaN   \n",
       "9                                      NaN        NaN        NaN        NaN   \n",
       "14                                     NaN        NaN        NaN        NaN   \n",
       "17                                     NaN        NaN        NaN        NaN   \n",
       "\n",
       "   index  \n",
       "2    1.0  \n",
       "7    6.0  \n",
       "9    8.0  \n",
       "14  13.0  \n",
       "17  16.0  \n",
       "\n",
       "[5 rows x 368 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "countries.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb8b3d955d0>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(countries.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above graphs shows the number of NAN values present in the dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now removing columns and justifying\n",
    "\n",
    "Unnamed column has been removed as they are insignificant.\n",
    "\n",
    "Q12_part_text have been removed as they are just random binary numbers. But Q12_multiple choice questions are selected.\n",
    "\n",
    "Q16 and Q17 have similar type of questions. Hence Q16 has been removed.\n",
    "Removing Q16 reduces the number of columns.Also Q17 is more relevant because it tells us about how often the language is used and will be more helpful in predicting the salary. \n",
    "\n",
    "Now comparing Q19, Q20 and Q21. Q20 has more relevance to predict the salary. This is because the Q20 talks about the frequent usage of ML library rather than in the past few years. This is will be more related to skills in data science than Q19 and Q21.\n",
    "\n",
    "Now moving on to Q31 and Q32. Both have similar questions. Q32 talks about the frequent usage of data in school or work. Deleting Q31 will result in reduction in columns and also the model will have less features to deal with. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 300)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1 = countries.drop(['Unnamed: 0','Q12_Part_1_TEXT','Q12_Part_2_TEXT','Q12_Part_3_TEXT','Q12_Part_4_TEXT','Q12_Part_5_TEXT', 'Q16_Part_1','Q16_Part_2','Q16_Part_3','Q16_Part_4','Q16_Part_5','Q16_Part_6','Q16_Part_7','Q16_Part_8','Q16_Part_9','Q16_Part_10','Q16_Part_11','Q16_Part_12','Q16_Part_13','Q16_Part_14','Q16_Part_15','Q16_Part_16','Q16_Part_17','Q16_Part_18',\n",
    "'Q19_Part_1','Q19_Part_2','Q19_Part_3','Q19_Part_4','Q19_Part_5','Q19_Part_6','Q19_Part_7','Q19_Part_8','Q19_Part_9','Q19_Part_10','Q19_Part_11','Q19_Part_12','Q19_Part_13','Q19_Part_14','Q19_Part_15','Q19_Part_16','Q19_Part_17','Q19_Part_18','Q19_Part_19','Q21_Part_1','Q21_Part_2','Q21_Part_3','Q21_Part_4','Q21_Part_5','Q21_Part_6','Q21_Part_7','Q21_Part_8','Q21_Part_9','Q21_Part_10','Q21_Part_11','Q21_Part_12','Q21_Part_13', \n",
    "'Q31_Part_1','Q31_Part_2','Q31_Part_3','Q31_Part_4','Q31_Part_5','Q31_Part_6','Q31_Part_7','Q31_Part_8','Q31_Part_9','Q31_Part_10','Q31_Part_11','Q31_Part_12'], axis = 1)\n",
    "\n",
    "\n",
    "# q1617=[['Q17','Q16_Part_15']]#Q18 dropped earlier\n",
    "# list(countries.iloc[0][q1617])\n",
    "\n",
    "s1.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Q34 and Q35 have similar questions . Either one of the columns can be removed as they are similar and do not add much to the accuracy of the model and only complexes the model. hence Q34 is deleted\n",
    "\n",
    "Comparing Q36 and Q37. \n",
    "Q36 tells us about the online platforms in which people began and Q37 tells us about how much time they have spent on various online platfroms . Q37 will be correlated to the skill set and salary prediction than Q36. Hence Q36 can be removed. Also decreasing the number of columns and complexity of the model.\n",
    "\n",
    "Q38 has been deleted. Favourite media sources would not affect the salary predictions\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 220)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "s4 = s1.drop(['Q34_Part_1','Q34_Part_2','Q34_Part_3','Q34_Part_4','Q34_Part_5','Q34_Part_6','Q36_Part_1','Q36_Part_2','Q36_Part_3','Q36_Part_4','Q36_Part_5','Q36_Part_6','Q36_Part_7','Q36_Part_8','Q36_Part_9','Q36_Part_10','Q36_Part_11','Q36_Part_12','Q36_Part_13',\n",
    "'Q38_Part_1','Q38_Part_2','Q38_Part_3','Q38_Part_4','Q38_Part_5','Q38_Part_6','Q38_Part_7','Q38_Part_8','Q38_Part_9','Q38_Part_10','Q38_Part_11','Q38_Part_12','Q38_Part_13','Q38_Part_14','Q38_Part_15','Q38_Part_16','Q38_Part_17','Q38_Part_18','Q38_Part_19','Q38_Part_20','Q38_Part_21','Q38_Part_22','Q49_Part_1','Q49_Part_2','Q49_Part_3','Q49_Part_4','Q49_Part_5','Q49_Part_6','Q49_Part_7','Q49_Part_8','Q49_Part_9','Q49_Part_10','Q49_Part_11','Q49_Part_12'], axis = 1)\n",
    "s4.shape\n",
    "s5 = s4.drop(['Q50_Part_1','Q50_Part_2','Q50_Part_3','Q50_Part_4','Q50_Part_5','Q50_Part_6','Q50_Part_7','Q50_Part_8','index'], axis = 1)\n",
    "s5.shape\n",
    "s6 = s5.drop(['Q32_OTHER','Q26','Q47_Part_1','Q47_Part_2','Q47_Part_3','Q47_Part_4','Q47_Part_5','Q47_Part_6','Q47_Part_7','Q47_Part_8','Q47_Part_9','Q47_Part_10','Q47_Part_11','Q47_Part_12','Q47_Part_13','Q47_Part_14','Q47_Part_15','Q47_Part_16'], axis = 1)\n",
    "s6.shape\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ONE HOT ENCODING HAS BEEN DONE TO THE SINGLE ANSWER COLUMNS AND MULTIPLE CHOICE COLUMNS AFTER EXPLORATORY DATA ANALYSIS!!!!!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### EXPLORATORY DATA ANALYSIS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TREND 1 : HISTOGRAM PLOT OF Job descriptions\n",
    "\n",
    "It can be seen that most of the people who were surveyed were primarily dataScientists and Students. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Data Scientist'),\n",
       " Text(1, 0, 'Research Assistant'),\n",
       " Text(2, 0, 'Other'),\n",
       " Text(3, 0, 'Manager'),\n",
       " Text(4, 0, 'Data Analyst'),\n",
       " Text(5, 0, 'Software Engineer'),\n",
       " Text(6, 0, 'Student'),\n",
       " Text(7, 0, 'Research Scientist'),\n",
       " Text(8, 0, 'Data Engineer'),\n",
       " Text(9, 0, 'Developer Advocate'),\n",
       " Text(10, 0, 'Product/Project Manager'),\n",
       " Text(11, 0, 'Business Analyst'),\n",
       " Text(12, 0, 'Principal Investigator'),\n",
       " Text(13, 0, 'Statistician'),\n",
       " Text(14, 0, 'Chief Officer'),\n",
       " Text(15, 0, 'DBA/Database Engineer'),\n",
       " Text(16, 0, 'Consultant'),\n",
       " Text(17, 0, 'Marketing Analyst'),\n",
       " Text(18, 0, 'Salesperson'),\n",
       " Text(19, 0, 'Data Journalist')]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(30,7))\n",
    "\n",
    "jobplot = sns.countplot(x = 'Q6', data = s6)\n",
    "chart.set_xticklabels(jobplot.get_xticklabels(), rotation=90)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Trend 2: Box plot has been plotted for the Gender and Salary columns . "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "STEP 1) NOTE : Have converted the salary column (categorical) to a numeric column (numerical) for plotting the graphs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def score_to_numeric(x):\n",
    "    if x=='0-10,000':\n",
    "        return 1\n",
    "    if x=='10-20,000':\n",
    "        return 2\n",
    "    if x=='20-30,000':\n",
    "        return 3\n",
    "    if x=='30-40,000':\n",
    "        return 4\n",
    "    if x=='40-50,000':\n",
    "        return 5\n",
    "    if x=='50-60,000':\n",
    "        return 6\n",
    "    if x=='60-70,000':\n",
    "        return 7\n",
    "    if x=='70-80,000':\n",
    "        return 8\n",
    "    if x=='80-90,000':\n",
    "        return 9\n",
    "    if x=='90-100,000':\n",
    "        return 10\n",
    "    if x=='100-125,000':\n",
    "        return 11\n",
    "    if x=='125-150,000':\n",
    "        return 12\n",
    "    if x=='150-200,000':\n",
    "        return 13\n",
    "    if x=='200-250,000':\n",
    "        return 14\n",
    "    if x=='250-300,000':\n",
    "        return 15\n",
    "    if x=='300-400,000':\n",
    "        return 16\n",
    "    if x=='400-500,000':\n",
    "        return 17\n",
    "    if x=='500,000+':\n",
    "        return 18"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "s6['Q9_num'] = s6['Q9'].apply(score_to_numeric)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the box plot below, Salary column and Gender category has been interpreted.\n",
    "It can be observed that Female and Male have the same mean of salaries when compared with other people. The mean of salaries seems to be the highest for people who didn't prefer to expose their gender identity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb8a69736d0>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x = 'Q1', y = 'Q9_num', data = s6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "from wordcloud import WordCloud, STOPWORDS\n",
    "import string\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cloudcountry = salary['Q3']\n",
    "comment_words = ' '\n",
    "stopwords = set(STOPWORDS) \n",
    "  \n",
    "for value in cloudcountry: \n",
    "      \n",
    "    # typecaste each val to string \n",
    "    value = str(value) \n",
    "  \n",
    "    # split the value \n",
    "    tokens = value.split() \n",
    "      \n",
    "    # Converts each token into lowercase \n",
    "    for i in range(len(tokens)): \n",
    "        tokens[i] = tokens[i].lower() \n",
    "          \n",
    "    for words in tokens: \n",
    "        comment_words = comment_words + words + ' '\n",
    "\n",
    "wordcloud = WordCloud(width = 800, height = 800, \n",
    "                background_color ='white', \n",
    "                stopwords = stopwords, \n",
    "                min_font_size = 10).generate(comment_words) \n",
    "  \n",
    "# plot the WordCloud image                        \n",
    "plt.figure(figsize = (8, 8)) \n",
    "plt.imshow(wordcloud) \n",
    "plt.axis(\"off\") \n",
    "plt.tight_layout(pad = 0) \n",
    "  \n",
    "plt.show()        \n",
    "  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be seen that most of the people who were surveyed were primarily from USA and India. Not much of the people were been surveyed from countries like China , Russian and Germany. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### FEATURE SELECTION - RANDOM FOREST CLASSIFIER"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Feature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\n",
    "\n",
    "The feature selection technique is important because it helps in selecting only the important features of the columns and increases the accuracy of the model.\n",
    "\n",
    "Random Forest feature selection technique have been used for selecting the features. \n",
    "They provide good predictive performance , low overfitting and easy interpretability.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dropping the categorical target column from the dataset and assigning to a dataset seperately."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 219)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = s6.drop(['Q9','Q9_num'], axis = 1)\n",
    "y = s6['Q9']\n",
    "\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Converting 'Time from Start to Finish (seconds)' column into a  numeric column from categorical column inorder to reduce the number of features or columns when encoded by get_dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "X['Time from Start to Finish (seconds)'] = pd.to_numeric(X['Time from Start to Finish (seconds)'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### One hot encoding has been to all the multiple choice columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "MCQ = ['Q11_Part_1','Q11_Part_2','Q11_Part_3','Q11_Part_4','Q11_Part_5','Q11_Part_6','Q11_Part_7'\n",
    ",'Q13_Part_1','Q13_Part_2','Q13_Part_3','Q13_Part_4','Q13_Part_5','Q13_Part_6','Q13_Part_7','Q13_Part_8','Q13_Part_9','Q13_Part_10','Q13_Part_11','Q13_Part_12','Q13_Part_13','Q13_Part_14','Q13_Part_15','Q14_Part_1','Q14_Part_2','Q14_Part_3','Q14_Part_4','Q14_Part_5','Q14_Part_6','Q14_Part_7','Q14_Part_8','Q14_Part_9','Q14_Part_10','Q14_Part_11','Q15_Part_1','Q15_Part_2','Q15_Part_3','Q15_Part_4','Q15_Part_5','Q15_Part_6','Q15_Part_7',\n",
    "'Q27_Part_1','Q27_Part_2','Q27_Part_3','Q27_Part_4','Q27_Part_5','Q27_Part_6','Q27_Part_7','Q27_Part_8','Q27_Part_9','Q27_Part_10','Q27_Part_11','Q27_Part_12','Q27_Part_13','Q27_Part_14','Q27_Part_15','Q27_Part_16','Q27_Part_17','Q27_Part_18','Q27_Part_19','Q27_Part_20','Q28_Part_1','Q28_Part_2','Q28_Part_3','Q28_Part_4','Q28_Part_5','Q28_Part_6','Q28_Part_7','Q28_Part_8','Q28_Part_9','Q28_Part_10',\n",
    "'Q28_Part_11','Q28_Part_12','Q28_Part_13','Q28_Part_14','Q28_Part_15','Q28_Part_16','Q28_Part_17','Q28_Part_18','Q28_Part_19','Q28_Part_20','Q28_Part_21','Q28_Part_22','Q28_Part_23','Q28_Part_24','Q28_Part_25','Q28_Part_26','Q28_Part_27','Q28_Part_28','Q28_Part_29','Q28_Part_30','Q28_Part_31','Q28_Part_32','Q28_Part_33','Q28_Part_34','Q28_Part_35','Q28_Part_36','Q28_Part_37','Q28_Part_38','Q28_Part_39','Q28_Part_40','Q28_Part_41','Q28_Part_42','Q28_Part_43','Q29_Part_1','Q29_Part_2','Q29_Part_3','Q29_Part_4','Q29_Part_5','Q29_Part_6','Q29_Part_7','Q29_Part_8','Q29_Part_9','Q29_Part_10','Q29_Part_11','Q29_Part_12','Q29_Part_13','Q29_Part_14','Q29_Part_15','Q29_Part_16','Q29_Part_17','Q29_Part_18','Q29_Part_19','Q29_Part_20','Q29_Part_21','Q29_Part_22','Q29_Part_23','Q29_Part_24','Q29_Part_25','Q29_Part_26','Q29_Part_27','Q29_Part_28','Q30_Part_1','Q30_Part_2','Q30_Part_3','Q30_Part_4','Q30_Part_5','Q30_Part_6','Q30_Part_7','Q30_Part_8','Q30_Part_9','Q30_Part_10','Q30_Part_11','Q30_Part_12','Q30_Part_13','Q30_Part_14','Q30_Part_15','Q30_Part_16','Q30_Part_17','Q30_Part_18','Q30_Part_19','Q30_Part_20','Q30_Part_21','Q30_Part_22','Q30_Part_23','Q30_Part_24','Q30_Part_25','Q33_Part_1','Q33_Part_2','Q33_Part_3','Q33_Part_4','Q33_Part_5','Q33_Part_6','Q33_Part_7','Q33_Part_8','Q33_Part_9','Q33_Part_10','Q33_Part_11','Q35_Part_1','Q35_Part_2','Q35_Part_3','Q35_Part_4','Q35_Part_5','Q35_Part_6',\n",
    "'Q39_Part_1','Q39_Part_2','Q41_Part_1','Q41_Part_2','Q41_Part_3','Q42_Part_1','Q42_Part_2','Q42_Part_3','Q42_Part_4','Q42_Part_5','Q44_Part_1','Q44_Part_2','Q44_Part_3','Q44_Part_4','Q44_Part_5','Q44_Part_6','Q45_Part_1','Q45_Part_2','Q45_Part_3','Q45_Part_4','Q45_Part_5','Q45_Part_6']\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "MCQdf = X[MCQ].notnull().astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 195)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MCQdf.shape\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now encoding only the remaining single choice columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 24)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "singledf = X[[i for i in X.columns if i not in MCQ]]\n",
    "singledf.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1_Female</th>\n",
       "      <th>Q1_Male</th>\n",
       "      <th>Q1_Prefer not to say</th>\n",
       "      <th>Q1_Prefer to self-describe</th>\n",
       "      <th>Q2_18-21</th>\n",
       "      <th>Q2_22-24</th>\n",
       "      <th>Q2_25-29</th>\n",
       "      <th>Q2_30-34</th>\n",
       "      <th>Q2_35-39</th>\n",
       "      <th>...</th>\n",
       "      <th>Q46_50-60</th>\n",
       "      <th>Q46_60-70</th>\n",
       "      <th>Q46_70-80</th>\n",
       "      <th>Q46_80-90</th>\n",
       "      <th>Q46_90-100</th>\n",
       "      <th>Q48_I am confident that I can explain the outputs of most if not all ML models</th>\n",
       "      <th>Q48_I am confident that I can understand and explain the outputs of many but not all ML models</th>\n",
       "      <th>Q48_I do not know; I have no opinion on the matter</th>\n",
       "      <th>Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs</th>\n",
       "      <th>Q48_Yes, most ML models are \"black boxes\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>718</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>823</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1917</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>2150</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>1327</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 249 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Time from Start to Finish (seconds)  Q1_Female  Q1_Male  \\\n",
       "2                                   718          1        0   \n",
       "7                                   823          0        1   \n",
       "9                                  1917          0        1   \n",
       "14                                 2150          0        1   \n",
       "17                                 1327          0        1   \n",
       "\n",
       "    Q1_Prefer not to say  Q1_Prefer to self-describe  Q2_18-21  Q2_22-24  \\\n",
       "2                      0                           0         0         0   \n",
       "7                      0                           0         0         0   \n",
       "9                      0                           0         0         0   \n",
       "14                     0                           0         0         0   \n",
       "17                     0                           0         0         0   \n",
       "\n",
       "    Q2_25-29  Q2_30-34  Q2_35-39  ...  Q46_50-60  Q46_60-70  Q46_70-80  \\\n",
       "2          0         1         0  ...          0          0          0   \n",
       "7          0         0         0  ...          0          0          0   \n",
       "9          1         0         0  ...          0          0          0   \n",
       "14         0         0         1  ...          0          0          0   \n",
       "17         0         1         0  ...          0          0          0   \n",
       "\n",
       "    Q46_80-90  Q46_90-100  \\\n",
       "2           0           0   \n",
       "7           0           0   \n",
       "9           0           0   \n",
       "14          0           0   \n",
       "17          1           0   \n",
       "\n",
       "    Q48_I am confident that I can explain the outputs of most if not all ML models  \\\n",
       "2                                                   1                                \n",
       "7                                                   0                                \n",
       "9                                                   0                                \n",
       "14                                                  0                                \n",
       "17                                                  0                                \n",
       "\n",
       "    Q48_I am confident that I can understand and explain the outputs of many but not all ML models  \\\n",
       "2                                                   0                                                \n",
       "7                                                   1                                                \n",
       "9                                                   0                                                \n",
       "14                                                  1                                                \n",
       "17                                                  1                                                \n",
       "\n",
       "    Q48_I do not know; I have no opinion on the matter  \\\n",
       "2                                                   0    \n",
       "7                                                   0    \n",
       "9                                                   0    \n",
       "14                                                  0    \n",
       "17                                                  0    \n",
       "\n",
       "    Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs  \\\n",
       "2                                                   0                                                         \n",
       "7                                                   0                                                         \n",
       "9                                                   1                                                         \n",
       "14                                                  0                                                         \n",
       "17                                                  0                                                         \n",
       "\n",
       "    Q48_Yes, most ML models are \"black boxes\"  \n",
       "2                                           0  \n",
       "7                                           0  \n",
       "9                                           0  \n",
       "14                                          0  \n",
       "17                                          0  \n",
       "\n",
       "[5 rows x 249 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "singledf1 = pd.get_dummies(singledf)\n",
    "\n",
    "singledf1.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concateddf = pd.concat([singledf1,MCQdf], axis =1)\n",
    "\n",
    "type(concateddf)\n",
    "\n",
    "y = pd.DataFrame(y)\n",
    "\n",
    "type(y)\n",
    "\n",
    "type(concateddf)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Label encoding is done for the target column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0-10,000' '10-20,000' '100-125,000' '125-150,000' '150-200,000'\n",
      " '20-30,000' '200-250,000' '250-300,000' '30-40,000' '300-400,000'\n",
      " '40-50,000' '400-500,000' '50-60,000' '500,000+' '60-70,000' '70-80,000'\n",
      " '80-90,000' '90-100,000']\n",
      "[[ 0]\n",
      " [ 3]\n",
      " [ 8]\n",
      " ...\n",
      " [14]\n",
      " [12]\n",
      " [17]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py:73: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  return f(**kwargs)\n"
     ]
    }
   ],
   "source": [
    "from sklearn import preprocessing\n",
    "le = preprocessing.LabelEncoder()\n",
    "le.fit(y)\n",
    "print(le.classes_)\n",
    "y=le.transform(y).reshape(-1,1)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8904, 444)\n",
      "(8904, 1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(concateddf.shape)\n",
    "print(y.shape)\n",
    "type(y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Converting y again to a data frame\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "y = pd.DataFrame(y)\n",
    "type(y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Now import random forest classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/sklearn/utils/deprecation.py:143: FutureWarning: The sklearn.ensemble.forest module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.ensemble. Anything that cannot be imported from sklearn.ensemble is now part of the private API.\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "from sklearn.ensemble.forest import RandomForestClassifier\n",
    "from sklearn.feature_selection import SelectFromModel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In all feature selection procedures, it is a good practice to select the features by examining only the training set. This is to avoid overfitting. This is the reason behind splitting the data into training and test data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set :  (7123, 444) (7123, 1)\n",
      "Testing set : (1781, 444) (1781, 1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(concateddf, y, test_size=0.20, random_state=42)\n",
    "\n",
    "\n",
    "print('Training set : ',X_train.shape,y_train.shape)\n",
    "\n",
    "print('Testing set :',X_test.shape,y_test.shape)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "EXPLANATION OF WHY RANDOM CLASSIFIER WAS USED: from 'SelectFromModel',  it will select those features which importance is greater than the mean importance of all the features by default, but we can alter this threshold if we want.This is one of the main reasons behind choosing random forest feature selection technique.\n",
    "\n",
    "How random forest are randomised : By selecting the data points used to build a tree and by selecting the features in each split test.\n",
    "\n",
    "Benefits : They work well without heavy tuning of the parameters and dont require scaling of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/sklearn/feature_selection/_from_model.py:224: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
      "  self.estimator_.fit(X, y, **fit_params)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "SelectFromModel(estimator=RandomForestClassifier())"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel = SelectFromModel(RandomForestClassifier())\n",
    "sel.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "sel.get_support():\n",
    "\n",
    "It will return an array of boolean values. True for the features whose importance is greater than the mean importance and False for the rest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True,  True,  True, False, False,  True,  True,  True,  True,\n",
       "        True,  True, False, False, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True, False,\n",
       "        True, False, False, False,  True,  True,  True, False, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False, False, False,  True, False, False,  True, False, False,\n",
       "       False,  True, False, False, False,  True, False,  True, False,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "       False, False, False,  True, False, False, False,  True,  True,\n",
       "       False, False,  True,  True,  True, False,  True, False, False,\n",
       "        True, False,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True, False,  True,  True, False, False,\n",
       "       False, False, False, False, False, False, False, False,  True,\n",
       "        True, False, False,  True, False, False, False, False, False,\n",
       "       False, False, False, False,  True,  True, False, False, False,\n",
       "       False, False, False, False, False, False,  True, False, False,\n",
       "       False, False,  True, False,  True, False, False, False, False,\n",
       "       False, False, False, False, False, False, False,  True, False,\n",
       "       False, False, False,  True, False,  True, False,  True,  True,\n",
       "        True,  True,  True, False,  True, False, False,  True,  True,\n",
       "       False, False,  True, False,  True, False, False, False, False,\n",
       "        True, False,  True, False, False, False, False, False,  True,\n",
       "       False, False,  True,  True,  True, False,  True, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True, False,  True, False,  True, False,  True,  True,  True,\n",
       "       False, False, False, False, False, False, False, False,  True,\n",
       "        True,  True,  True, False, False, False, False, False, False,\n",
       "       False, False,  True, False,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True, False,  True,  True,  True,  True, False,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False, False,\n",
       "        True,  True, False,  True,  True,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False,  True, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False,  True, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True,  True,  True,  True, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False,  True, False,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False, False,  True,\n",
       "        True, False, False, False,  True,  True,  True,  True, False,\n",
       "        True,  True,  True,  True, False,  True, False,  True,  True,\n",
       "        True,  True, False])"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel.get_support()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "159"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selected_feat= concateddf.columns[(sel.get_support())]\n",
    "len(selected_feat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Time from Start to Finish (seconds)', 'Q1_Female', 'Q1_Male',\n",
      "       'Q2_18-21', 'Q2_22-24', 'Q2_25-29', 'Q2_30-34', 'Q2_35-39', 'Q2_40-44',\n",
      "       'Q3_Brazil',\n",
      "       ...\n",
      "       'Q42_Part_4', 'Q44_Part_1', 'Q44_Part_2', 'Q44_Part_3', 'Q44_Part_4',\n",
      "       'Q44_Part_6', 'Q45_Part_2', 'Q45_Part_3', 'Q45_Part_4', 'Q45_Part_5'],\n",
      "      dtype='object', length=159)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Time from Start to Finish (seconds)',\n",
       " 'Q1_Female',\n",
       " 'Q1_Male',\n",
       " 'Q2_18-21',\n",
       " 'Q2_22-24',\n",
       " 'Q2_25-29',\n",
       " 'Q2_30-34',\n",
       " 'Q2_35-39',\n",
       " 'Q2_40-44',\n",
       " 'Q3_Brazil',\n",
       " 'Q3_China',\n",
       " 'Q3_Germany',\n",
       " 'Q3_India',\n",
       " 'Q3_Other',\n",
       " 'Q3_Russia',\n",
       " 'Q3_United States of America',\n",
       " 'Q4_Bachelor’s degree',\n",
       " 'Q4_Doctoral degree',\n",
       " 'Q4_Master’s degree',\n",
       " 'Q5_A business discipline (accounting, economics, finance, etc.)',\n",
       " 'Q5_Computer science (software engineering, etc.)',\n",
       " 'Q5_Engineering (non-computer focused)',\n",
       " 'Q5_Mathematics or statistics',\n",
       " 'Q5_Physics or astronomy',\n",
       " 'Q6_Business Analyst',\n",
       " 'Q6_Data Analyst',\n",
       " 'Q6_Data Scientist',\n",
       " 'Q6_Other',\n",
       " 'Q6_Research Scientist',\n",
       " 'Q6_Software Engineer',\n",
       " 'Q6_Student',\n",
       " 'Q7_Academics/Education',\n",
       " 'Q7_Accounting/Finance',\n",
       " 'Q7_Computers/Technology',\n",
       " 'Q7_I am a student',\n",
       " 'Q7_Medical/Pharmaceutical',\n",
       " 'Q7_Online Service/Internet-based Services',\n",
       " 'Q7_Other',\n",
       " 'Q8_0-1',\n",
       " 'Q8_1-2',\n",
       " 'Q8_10-15',\n",
       " 'Q8_2-3',\n",
       " 'Q8_3-4',\n",
       " 'Q8_4-5',\n",
       " 'Q8_5-10',\n",
       " 'Q10_I do not know',\n",
       " 'Q10_No (we do not use ML methods)',\n",
       " 'Q10_We are exploring ML methods (and may one day put a model into production)',\n",
       " 'Q10_We have well established ML methods (i.e., models in production for more than 2 years)',\n",
       " 'Q10_We recently started using ML methods (i.e., models in production for less than 2 years)',\n",
       " 'Q10_We use ML methods for generating insights (but do not put working models into production)',\n",
       " 'Q12_MULTIPLE_CHOICE_Advanced statistical software (SPSS, SAS, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Basic statistical software (Microsoft Excel, Google Sheets, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Business intelligence software (Salesforce, Tableau, Spotfire, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Local or hosted development environments (RStudio, JupyterLab, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Other',\n",
       " 'Q17_Python',\n",
       " 'Q17_R',\n",
       " 'Q17_SQL',\n",
       " 'Q18_Python',\n",
       " 'Q18_R',\n",
       " 'Q20_Keras',\n",
       " 'Q20_Scikit-Learn',\n",
       " 'Q20_TensorFlow',\n",
       " 'Q22_Matplotlib',\n",
       " 'Q22_ggplot2',\n",
       " 'Q23_1% to 25% of my time',\n",
       " 'Q23_25% to 49% of my time',\n",
       " 'Q23_50% to 74% of my time',\n",
       " 'Q23_75% to 99% of my time',\n",
       " 'Q24_1-2 years',\n",
       " 'Q24_10-20 years',\n",
       " 'Q24_3-5 years',\n",
       " 'Q24_5-10 years',\n",
       " 'Q24_< 1 year',\n",
       " 'Q25_1-2 years',\n",
       " 'Q25_2-3 years',\n",
       " 'Q25_< 1 year',\n",
       " 'Q25_I have never studied machine learning but plan to learn in the future',\n",
       " 'Q32_Numerical Data',\n",
       " 'Q32_Tabular Data',\n",
       " 'Q32_Text Data',\n",
       " 'Q32_Time Series Data',\n",
       " 'Q37_Coursera',\n",
       " 'Q40_Independent projects are equally important as academic achievements',\n",
       " 'Q40_Independent projects are much more important than academic achievements',\n",
       " 'Q40_Independent projects are slightly more important than academic achievements',\n",
       " 'Q43_0',\n",
       " 'Q43_0-10',\n",
       " 'Q43_10-20',\n",
       " 'Q46_0',\n",
       " 'Q46_0-10',\n",
       " 'Q46_10-20',\n",
       " 'Q46_20-30',\n",
       " 'Q48_I am confident that I can understand and explain the outputs of many but not all ML models',\n",
       " 'Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs',\n",
       " 'Q48_Yes, most ML models are \"black boxes\"',\n",
       " 'Q11_Part_1',\n",
       " 'Q11_Part_2',\n",
       " 'Q11_Part_3',\n",
       " 'Q11_Part_4',\n",
       " 'Q11_Part_5',\n",
       " 'Q11_Part_6',\n",
       " 'Q13_Part_1',\n",
       " 'Q13_Part_2',\n",
       " 'Q13_Part_3',\n",
       " 'Q13_Part_4',\n",
       " 'Q13_Part_6',\n",
       " 'Q13_Part_7',\n",
       " 'Q13_Part_8',\n",
       " 'Q13_Part_9',\n",
       " 'Q13_Part_10',\n",
       " 'Q13_Part_11',\n",
       " 'Q13_Part_12',\n",
       " 'Q13_Part_13',\n",
       " 'Q14_Part_1',\n",
       " 'Q14_Part_2',\n",
       " 'Q14_Part_9',\n",
       " 'Q14_Part_10',\n",
       " 'Q15_Part_1',\n",
       " 'Q15_Part_2',\n",
       " 'Q15_Part_3',\n",
       " 'Q15_Part_6',\n",
       " 'Q27_Part_1',\n",
       " 'Q27_Part_2',\n",
       " 'Q27_Part_6',\n",
       " 'Q27_Part_19',\n",
       " 'Q28_Part_42',\n",
       " 'Q29_Part_9',\n",
       " 'Q29_Part_10',\n",
       " 'Q29_Part_11',\n",
       " 'Q29_Part_12',\n",
       " 'Q29_Part_13',\n",
       " 'Q30_Part_24',\n",
       " 'Q33_Part_1',\n",
       " 'Q33_Part_2',\n",
       " 'Q33_Part_3',\n",
       " 'Q33_Part_4',\n",
       " 'Q33_Part_5',\n",
       " 'Q33_Part_6',\n",
       " 'Q33_Part_7',\n",
       " 'Q33_Part_8',\n",
       " 'Q33_Part_9',\n",
       " 'Q33_Part_10',\n",
       " 'Q39_Part_1',\n",
       " 'Q39_Part_2',\n",
       " 'Q42_Part_1',\n",
       " 'Q42_Part_2',\n",
       " 'Q42_Part_3',\n",
       " 'Q42_Part_4',\n",
       " 'Q44_Part_1',\n",
       " 'Q44_Part_2',\n",
       " 'Q44_Part_3',\n",
       " 'Q44_Part_4',\n",
       " 'Q44_Part_6',\n",
       " 'Q45_Part_2',\n",
       " 'Q45_Part_3',\n",
       " 'Q45_Part_4',\n",
       " 'Q45_Part_5']"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(selected_feat)\n",
    "\n",
    "slfeatures = selected_feat.values.tolist()\n",
    "\n",
    "slfeatures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8904, 159)\n",
      "(8904, 1)\n"
     ]
    }
   ],
   "source": [
    "concateddf = concateddf[slfeatures]\n",
    "print(concateddf.shape)\n",
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MODEL IMPLEMENTATION : LOGISTIC REGRESSION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7123, 159) (7123, 1)\n",
      "(1781, 159) (1781, 1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "logmodel = LogisticRegression()\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(concateddf, y, test_size=0.20, random_state=42)\n",
    "\n",
    "print(X_train.shape, y_train.shape)\n",
    "print(X_test.shape, y_test.shape)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now using K fold Classifer to check for accuracy\n",
    "\n",
    "The default C value is 1.0 in this case."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### IMPORTANT NOTE: \n",
    " Now performing only in training data set. \n",
    " For cross-validation and hyperparameter the dataset used was Xtrain. This is done to make sure that the model is not trained on the test data. This aids in keeping the test data separate to make the model is generalized not overfitting to the training data.\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3590462833099579\n",
      "0.3492286115007013\n",
      "0.3856942496493689\n",
      "0.39325842696629215\n",
      "0.4353932584269663\n",
      "0.36657303370786515\n",
      "0.37219101123595505\n",
      "0.35674157303370785\n",
      "0.4044943820224719\n",
      "0.4199438202247191\n",
      "Average Score: 0.42%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "logmodel = LogisticRegression()\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_train)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_train):\n",
    "    X_train1, X_test1 = X_train.values[train_idx], X_train.values[test_idx]\n",
    "    y_train1, y_test1 = y_train.values[train_idx], y_train.values[test_idx]\n",
    "    \n",
    "    X_train1 = scaler.fit_transform(X_train1)\n",
    "    X_test1 = scaler.transform(X_test1)\n",
    "    \n",
    "    logmodel.fit(X_train1, y_train1)\n",
    "    \n",
    "    predictions = logmodel.predict(X_test1)\n",
    "    prediction_prob = logmodel.predict_proba(X_test1)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test1)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print (\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0039303761931499155"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_predictions = logmodel.predict(X_test)\n",
    "accuracy_score(test_predictions,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The accuracy seems to be very low in the test set "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Plot the mean accuracy, the \"learning curve\", of the classifier on both the training and validation dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import learning_curve\n",
    "def plot_learning_curve(estimator, title, X_train, y_train, ylim=None, cv=None, n_jobs=1,\\\n",
    "                        train_sizes=np.linspace(.1, 1.0, 5), scoring='accuracy'):\n",
    "    \n",
    "    plt.figure(figsize=(10,6))\n",
    "    plt.title(title)\n",
    "    \n",
    "    if ylim is not None:\n",
    "        plt.ylim(*ylim)\n",
    "        \n",
    "    plt.xlabel(\"Training examples\")\n",
    "    plt.ylabel(scoring)\n",
    "    \n",
    "    train_sizes, train_scores, test_scores = learning_curve(estimator, X_train, y_train, cv=10, scoring=scoring, n_jobs=n_jobs, train_sizes=train_sizes)\n",
    "    train_scores_mean = np.mean(train_scores, axis=1)\n",
    "    train_scores_std = np.std(train_scores, axis=1)\n",
    "    test_scores_mean = np.mean(test_scores, axis=1)\n",
    "    test_scores_std = np.std(test_scores, axis=1)\n",
    "    \n",
    "    plt.grid()\n",
    "\n",
    "    plt.fill_between(train_sizes, train_scores_mean - train_scores_std,\\\n",
    "                     train_scores_mean + train_scores_std, alpha=0.1, \\\n",
    "                     color=\"r\")\n",
    "    plt.fill_between(train_sizes, test_scores_mean - test_scores_std,\\\n",
    "                     test_scores_mean + test_scores_std, alpha=0.1, color=\"g\")\n",
    "    \n",
    "    plt.plot(train_sizes, train_scores_mean, 'o-', color=\"r\",label=\"Training score\")\n",
    "    plt.plot(train_sizes, test_scores_mean, 'o-', color=\"g\", label=\"Cross-validation score\")\n",
    "    plt.legend(loc=\"best\")\n",
    "    \n",
    "    return plt\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'matplotlib.pyplot' from '/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py'>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plot_learning_curve(logmodel,'Logistic Regression', X_train, y_train, cv=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  BIAS VARIANCE TRADE-OFF:\n",
    "\n",
    "Plot learning curve has been plotted to know whether the model has high bias or high variance and how to improve the model performance. We can minimise the training error by decreasing the bias. And variance can be reduced by decreasing the difference between the training and testing error.\n",
    "\n",
    "If the model has high bias, we should try adding more features which increases the model complexity and decrease the regularisation parameter lambda.\n",
    "\n",
    "If the model has high variance as seen from above , we should try decreasing the set of features and increase the regularisation parameter lambda.\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### MODEL TUNING USING GRID SEARCH CV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "# param_grid = {'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000] }\n",
    "\n",
    "\n",
    "\n",
    "# clf1 = GridSearchCV(LogisticRegression(penalty='l2'), param_grid,cv=10)\n",
    "# best_clf = clf1.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# best_clf.best_params_\n",
    "\n",
    "                            \n",
    "param_grid = {'C': [0.1, 1, 0.5,0.6,0.7,0.8,0.9,2,3,4,5,6,7,8,9]}\n",
    "clf= GridSearchCV(LogisticRegression(penalty='l2'), param_grid)\n",
    "gridmodel=clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 0.1}"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gridmodel.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3171417307313227"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gridmodel.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.32004491858506456"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Predict values based on new parameters\n",
    "y_pred_acc = gridmodel.predict(X_test)\n",
    "accuracy_score(y_pred_acc,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "#### So now we change the default value of C to 0.1 as it is the best parameter observed among C values. Now we implement the model again and see the accuracy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MODEL IMPLEMENTATION 2:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.37166900420757365\n",
      "0.3632538569424965\n",
      "0.37727910238429174\n",
      "0.3946629213483146\n",
      "0.43820224719101125\n",
      "0.37219101123595505\n",
      "0.3707865168539326\n",
      "0.35814606741573035\n",
      "0.4002808988764045\n",
      "0.4241573033707865\n",
      "Accuracy percentage on training data: Average Score: 0.424%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "logmodel1 = LogisticRegression( C = 0.1 )\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_train)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_train):\n",
    "    X_train1, X_test1 = X_train.values[train_idx], X_train.values[test_idx]\n",
    "    y_train1, y_test1 = y_train.values[train_idx], y_train.values[test_idx]\n",
    "    \n",
    "    X_train1 = scaler.fit_transform(X_train1)\n",
    "    X_test1 = scaler.transform(X_test1)\n",
    "    \n",
    "    logmodel1.fit(X_train1, y_train1)\n",
    "    \n",
    "    predictions = logmodel1.predict(X_test1)\n",
    "    prediction_prob = logmodel1.predict_proba(X_test1)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test1)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print ('Accuracy percentage on training data:',\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Accuracy percentage when perfomed on unseen test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy percentage: 0.39303761931499154 %\n"
     ]
    }
   ],
   "source": [
    "test_predictions = logmodel1.predict(X_test)\n",
    "print('Accuracy percentage:',(accuracy_score(test_predictions,y_test)*100), '%')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The accuracy increased when using the optimal parameter of C =0.1\n",
    "\n",
    "The optimal C obtained after tuning was 0.1. Since the C is over the lower side, this signigies that the model is penalized for the higher values of weights. By default C=1, after tuning the model accuracy improved for optimal C value of 0.1. Since, the weight of regulatization C was 0.6, the model was overfitting which was brought to optimal fit by hyperparameter tuning."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the graph on the new optimised model with the optimum parameter C = 0.1 has been plotted. It can be seen that the difference between the training and cross-validation score is decreased a bit. Hence decreasing the variance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'matplotlib.pyplot' from '/Users/praveenvs/opt/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py'>"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_learning_curve(logmodel1,'Logistic Regression', X_train, y_train, cv=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now implementing the optimal model with the test data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.39664804469273746\n",
      "0.3707865168539326\n",
      "0.3595505617977528\n",
      "0.37640449438202245\n",
      "0.2752808988764045\n",
      "0.34831460674157305\n",
      "0.3651685393258427\n",
      "0.3202247191011236\n",
      "0.4044943820224719\n",
      "0.33146067415730335\n",
      "Accuracy percentage on training data: Average Score: 0.331%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "logmodel1 = LogisticRegression( C = 0.1 )\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_test)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_test):\n",
    "    X_train2, X_test2 = X_test.values[train_idx], X_test.values[test_idx]\n",
    "    y_train2, y_test2 = y_test.values[train_idx], y_test.values[test_idx]\n",
    "    \n",
    "    X_train2 = scaler.fit_transform(X_train2)\n",
    "    X_test2 = scaler.transform(X_test2)\n",
    "    \n",
    "    logmodel1.fit(X_train2, y_train2)\n",
    "    \n",
    "    predictions = logmodel1.predict(X_test2)\n",
    "    prediction_prob1 = logmodel1.predict_proba(X_test2)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test2)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print ('Accuracy percentage on training data:',\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### TESTING AND DISCUSSION:\n",
    "\n",
    "The model perfroms bad in test set and has decreased its percentage of accuracy but not much . So the model is a normal fit. Not underfit or overfit."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The probability for both training and testing data is plotted below using a bar plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[3.18843954e-02 2.00976155e-02 1.41288361e-01 ... 1.07954865e-01\n",
      "  5.33745510e-02 6.33828779e-02]\n",
      " [2.86591861e-01 2.22637055e-01 6.30774903e-03 ... 6.94302449e-02\n",
      "  6.91261871e-02 2.25374887e-02]\n",
      " [7.60298430e-01 1.61565376e-01 6.24397846e-05 ... 4.92785703e-04\n",
      "  1.65774546e-04 1.48980064e-04]\n",
      " ...\n",
      " [8.89927220e-01 5.34834882e-02 1.93465398e-04 ... 3.86527322e-04\n",
      "  2.12656179e-04 1.60246844e-04]\n",
      " [2.46094712e-03 8.80916979e-03 2.73986105e-01 ... 2.69016260e-01\n",
      "  8.97366454e-02 7.10780991e-02]\n",
      " [5.98565962e-01 2.54847466e-01 4.96223575e-05 ... 2.82035170e-04\n",
      "  7.82128643e-05 3.52540741e-05]]\n",
      "[[4.48643675e-01 2.78133607e-01 2.43199658e-02 ... 1.73710839e-02\n",
      "  6.60772718e-03 2.31227594e-02]\n",
      " [2.17279110e-02 7.28219605e-02 9.20821391e-03 ... 1.86929300e-01\n",
      "  1.71732921e-03 2.53289363e-02]\n",
      " [1.05920028e-01 6.90190111e-02 4.03662342e-01 ... 1.65776308e-01\n",
      "  1.63382926e-01 3.12362696e-03]\n",
      " ...\n",
      " [9.49846970e-01 2.37621043e-02 8.80166194e-06 ... 2.44504396e-04\n",
      "  9.44989375e-04 2.34091193e-04]\n",
      " [1.09191870e-01 1.90718916e-02 4.42894026e-03 ... 2.23996916e-02\n",
      "  3.50183996e-01 1.17230158e-03]\n",
      " [5.47705597e-01 9.95608861e-02 1.11339247e-05 ... 2.73917126e-04\n",
      "  1.47292278e-03 5.32894570e-04]]\n"
     ]
    }
   ],
   "source": [
    "print(prediction_prob)\n",
    "print(prediction_prob1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = ['0-10,000', '10-20,000', '20-30,000', '30-40,000', '40-50,000', '50-60,000','60-70,000', '70-80,000', '80-90,000', '90-100,000', '100-125,000', '125-150,000', '150-200,000','200-250,000', '250-300,000', '300-400,000','400-500,000', '500,000+' ]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The plots have been plotted for person 2 on the dataset on both the training and testing datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "training_plot = pd.DataFrame(prediction_prob, columns = columns)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize = (10,6))\n",
    "plt.bar(columns, training_plot.loc[1])\n",
    "plt.xlabel('salary')\n",
    "plt.ylabel('probabality')\n",
    "plt.xticks(\n",
    "    rotation=45, \n",
    "    horizontalalignment='right',\n",
    "    fontweight='light',\n",
    "    fontsize='x-large'  )\n",
    "plt.title('training plot')\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "testing_plot = pd.DataFrame(prediction_prob1, columns = columns)\n",
    "\n",
    "plt.figure(figsize = (10,6))\n",
    "plt.bar(columns, testing_plot.loc[1])\n",
    "plt.xlabel('salary')\n",
    "plt.ylabel('probabality')\n",
    "plt.xticks(\n",
    "    rotation=45, \n",
    "    horizontalalignment='right',\n",
    "    fontweight='light',\n",
    "    fontsize='x-large'  \n",
    ")\n",
    "plt.title('testing plot')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
