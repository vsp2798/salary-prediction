{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "       #########################  SALARY PREDICTION  #############################"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "STEP 1: CLEANINING OF DATA\n",
    "\n",
    " a) Finding all missing NAN values and imputing them with various methods like mode, mean and mode.\n",
    " \n",
    " b) converting categorical data to numerical data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import random \n",
    "Salaries = pd.read_csv(\"multipleChoiceResponses.csv\", low_memory = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.dropna(subset=['Q9'],inplace=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['What is your current yearly compensation (approximate $USD)?',\n",
       "       '10-20,000', '0-10,000',\n",
       "       'I do not wish to disclose my approximate yearly compensation',\n",
       "       '20-30,000', '125-150,000', '30-40,000', '50-60,000',\n",
       "       '100-125,000', '90-100,000', '70-80,000', '80-90,000', '60-70,000',\n",
       "       '400-500,000', '40-50,000', '150-200,000', '500,000+',\n",
       "       '300-400,000', '200-250,000', '250-300,000'], dtype=object)"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Salaries.Q9.unique() 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries = Salaries[Salaries['Q9']!= \"I do not wish to disclose my approximate yearly compensation\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.loc[1:,'index'] = Salaries[1:].reset_index().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "metadata": {},
   "outputs": [],
   "source": [
    "Salaries.to_csv(\"Kaggle_Salary_clean.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">Unnamed: 0</th>\n",
       "      <th colspan=\"8\" halign=\"left\">index</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Q2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>18-21</td>\n",
       "      <td>1363.0</td>\n",
       "      <td>11542.128393</td>\n",
       "      <td>7345.729574</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4814.50</td>\n",
       "      <td>11472.0</td>\n",
       "      <td>18291.00</td>\n",
       "      <td>23842.0</td>\n",
       "      <td>1363.0</td>\n",
       "      <td>8113.482025</td>\n",
       "      <td>4927.024899</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3588.50</td>\n",
       "      <td>8512.0</td>\n",
       "      <td>12770.00</td>\n",
       "      <td>15423.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22-24</td>\n",
       "      <td>2894.0</td>\n",
       "      <td>11296.958880</td>\n",
       "      <td>6979.080163</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5226.75</td>\n",
       "      <td>10961.0</td>\n",
       "      <td>17355.25</td>\n",
       "      <td>23857.0</td>\n",
       "      <td>2894.0</td>\n",
       "      <td>7990.472702</td>\n",
       "      <td>4680.877875</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3917.00</td>\n",
       "      <td>8128.0</td>\n",
       "      <td>12262.50</td>\n",
       "      <td>15428.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25-29</td>\n",
       "      <td>4278.0</td>\n",
       "      <td>10819.503974</td>\n",
       "      <td>6649.448596</td>\n",
       "      <td>13.0</td>\n",
       "      <td>5138.50</td>\n",
       "      <td>10312.0</td>\n",
       "      <td>16142.25</td>\n",
       "      <td>23836.0</td>\n",
       "      <td>4278.0</td>\n",
       "      <td>7701.018700</td>\n",
       "      <td>4477.858797</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3844.50</td>\n",
       "      <td>7633.5</td>\n",
       "      <td>11599.75</td>\n",
       "      <td>15420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>30-34</td>\n",
       "      <td>2819.0</td>\n",
       "      <td>10587.398013</td>\n",
       "      <td>6445.015946</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5060.50</td>\n",
       "      <td>10082.0</td>\n",
       "      <td>15398.50</td>\n",
       "      <td>23854.0</td>\n",
       "      <td>2819.0</td>\n",
       "      <td>7558.115644</td>\n",
       "      <td>4342.217432</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3784.00</td>\n",
       "      <td>7458.0</td>\n",
       "      <td>11196.50</td>\n",
       "      <td>15426.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35-39</td>\n",
       "      <td>1637.0</td>\n",
       "      <td>10449.713500</td>\n",
       "      <td>6285.787376</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5122.00</td>\n",
       "      <td>10151.0</td>\n",
       "      <td>14735.00</td>\n",
       "      <td>23824.0</td>\n",
       "      <td>1637.0</td>\n",
       "      <td>7483.777031</td>\n",
       "      <td>4257.462958</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3830.00</td>\n",
       "      <td>7510.0</td>\n",
       "      <td>10853.00</td>\n",
       "      <td>15417.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>40-44</td>\n",
       "      <td>989.0</td>\n",
       "      <td>10598.187058</td>\n",
       "      <td>6269.268360</td>\n",
       "      <td>12.0</td>\n",
       "      <td>5389.00</td>\n",
       "      <td>10387.0</td>\n",
       "      <td>14840.00</td>\n",
       "      <td>23817.0</td>\n",
       "      <td>989.0</td>\n",
       "      <td>7587.144590</td>\n",
       "      <td>4234.625543</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4043.00</td>\n",
       "      <td>7693.0</td>\n",
       "      <td>10904.00</td>\n",
       "      <td>15414.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>45-49</td>\n",
       "      <td>602.0</td>\n",
       "      <td>10788.295681</td>\n",
       "      <td>5916.809981</td>\n",
       "      <td>101.0</td>\n",
       "      <td>5835.00</td>\n",
       "      <td>10664.5</td>\n",
       "      <td>14277.75</td>\n",
       "      <td>23855.0</td>\n",
       "      <td>602.0</td>\n",
       "      <td>7753.436877</td>\n",
       "      <td>4006.213129</td>\n",
       "      <td>81.0</td>\n",
       "      <td>4380.50</td>\n",
       "      <td>7910.5</td>\n",
       "      <td>10566.75</td>\n",
       "      <td>15427.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50-54</td>\n",
       "      <td>403.0</td>\n",
       "      <td>10426.970223</td>\n",
       "      <td>5806.371111</td>\n",
       "      <td>137.0</td>\n",
       "      <td>5536.00</td>\n",
       "      <td>10388.0</td>\n",
       "      <td>13910.50</td>\n",
       "      <td>23694.0</td>\n",
       "      <td>403.0</td>\n",
       "      <td>7515.357320</td>\n",
       "      <td>3948.361960</td>\n",
       "      <td>108.0</td>\n",
       "      <td>4157.00</td>\n",
       "      <td>7694.0</td>\n",
       "      <td>10306.50</td>\n",
       "      <td>15351.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>55-59</td>\n",
       "      <td>222.0</td>\n",
       "      <td>9876.518018</td>\n",
       "      <td>5798.601152</td>\n",
       "      <td>20.0</td>\n",
       "      <td>4685.00</td>\n",
       "      <td>10215.0</td>\n",
       "      <td>13542.75</td>\n",
       "      <td>23691.0</td>\n",
       "      <td>222.0</td>\n",
       "      <td>7133.995495</td>\n",
       "      <td>3964.981445</td>\n",
       "      <td>14.0</td>\n",
       "      <td>3486.25</td>\n",
       "      <td>7561.0</td>\n",
       "      <td>10028.25</td>\n",
       "      <td>15349.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60-69</td>\n",
       "      <td>180.0</td>\n",
       "      <td>9418.294444</td>\n",
       "      <td>5364.756583</td>\n",
       "      <td>93.0</td>\n",
       "      <td>4995.50</td>\n",
       "      <td>9588.0</td>\n",
       "      <td>13046.50</td>\n",
       "      <td>23470.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>6852.888889</td>\n",
       "      <td>3733.349024</td>\n",
       "      <td>75.0</td>\n",
       "      <td>3735.00</td>\n",
       "      <td>7080.5</td>\n",
       "      <td>9668.25</td>\n",
       "      <td>15254.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>70-79</td>\n",
       "      <td>26.0</td>\n",
       "      <td>9425.153846</td>\n",
       "      <td>5722.433340</td>\n",
       "      <td>1885.0</td>\n",
       "      <td>4965.25</td>\n",
       "      <td>7908.0</td>\n",
       "      <td>12300.00</td>\n",
       "      <td>22946.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>6796.461538</td>\n",
       "      <td>3788.893646</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>3710.00</td>\n",
       "      <td>5930.5</td>\n",
       "      <td>9119.75</td>\n",
       "      <td>14976.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>80+</td>\n",
       "      <td>16.0</td>\n",
       "      <td>12203.375000</td>\n",
       "      <td>6037.760257</td>\n",
       "      <td>403.0</td>\n",
       "      <td>7249.75</td>\n",
       "      <td>13194.5</td>\n",
       "      <td>16036.25</td>\n",
       "      <td>23061.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>8753.375000</td>\n",
       "      <td>4069.201541</td>\n",
       "      <td>266.0</td>\n",
       "      <td>5479.25</td>\n",
       "      <td>9771.5</td>\n",
       "      <td>11542.75</td>\n",
       "      <td>15038.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Unnamed: 0                                     \\\n",
       "                                 count          mean          std     min   \n",
       "Q2                                                                          \n",
       "18-21                           1363.0  11542.128393  7345.729574     8.0   \n",
       "22-24                           2894.0  11296.958880  6979.080163     5.0   \n",
       "25-29                           4278.0  10819.503974  6649.448596    13.0   \n",
       "30-34                           2819.0  10587.398013  6445.015946     2.0   \n",
       "35-39                           1637.0  10449.713500  6285.787376     7.0   \n",
       "40-44                            989.0  10598.187058  6269.268360    12.0   \n",
       "45-49                            602.0  10788.295681  5916.809981   101.0   \n",
       "50-54                            403.0  10426.970223  5806.371111   137.0   \n",
       "55-59                            222.0   9876.518018  5798.601152    20.0   \n",
       "60-69                            180.0   9418.294444  5364.756583    93.0   \n",
       "70-79                             26.0   9425.153846  5722.433340  1885.0   \n",
       "80+                               16.0  12203.375000  6037.760257   403.0   \n",
       "What is your age (# years)?        1.0      0.000000          NaN     0.0   \n",
       "\n",
       "                                                                   index  \\\n",
       "                                 25%      50%       75%      max   count   \n",
       "Q2                                                                         \n",
       "18-21                        4814.50  11472.0  18291.00  23842.0  1363.0   \n",
       "22-24                        5226.75  10961.0  17355.25  23857.0  2894.0   \n",
       "25-29                        5138.50  10312.0  16142.25  23836.0  4278.0   \n",
       "30-34                        5060.50  10082.0  15398.50  23854.0  2819.0   \n",
       "35-39                        5122.00  10151.0  14735.00  23824.0  1637.0   \n",
       "40-44                        5389.00  10387.0  14840.00  23817.0   989.0   \n",
       "45-49                        5835.00  10664.5  14277.75  23855.0   602.0   \n",
       "50-54                        5536.00  10388.0  13910.50  23694.0   403.0   \n",
       "55-59                        4685.00  10215.0  13542.75  23691.0   222.0   \n",
       "60-69                        4995.50   9588.0  13046.50  23470.0   180.0   \n",
       "70-79                        4965.25   7908.0  12300.00  22946.0    26.0   \n",
       "80+                          7249.75  13194.5  16036.25  23061.0    16.0   \n",
       "What is your age (# years)?     0.00      0.0      0.00      0.0     0.0   \n",
       "\n",
       "                                                                        \\\n",
       "                                    mean          std     min      25%   \n",
       "Q2                                                                       \n",
       "18-21                        8113.482025  4927.024899     4.0  3588.50   \n",
       "22-24                        7990.472702  4680.877875     2.0  3917.00   \n",
       "25-29                        7701.018700  4477.858797     7.0  3844.50   \n",
       "30-34                        7558.115644  4342.217432     0.0  3784.00   \n",
       "35-39                        7483.777031  4257.462958     3.0  3830.00   \n",
       "40-44                        7587.144590  4234.625543     6.0  4043.00   \n",
       "45-49                        7753.436877  4006.213129    81.0  4380.50   \n",
       "50-54                        7515.357320  3948.361960   108.0  4157.00   \n",
       "55-59                        7133.995495  3964.981445    14.0  3486.25   \n",
       "60-69                        6852.888889  3733.349024    75.0  3735.00   \n",
       "70-79                        6796.461538  3788.893646  1320.0  3710.00   \n",
       "80+                          8753.375000  4069.201541   266.0  5479.25   \n",
       "What is your age (# years)?          NaN          NaN     NaN      NaN   \n",
       "\n",
       "                                                        \n",
       "                                50%       75%      max  \n",
       "Q2                                                      \n",
       "18-21                        8512.0  12770.00  15423.0  \n",
       "22-24                        8128.0  12262.50  15428.0  \n",
       "25-29                        7633.5  11599.75  15420.0  \n",
       "30-34                        7458.0  11196.50  15426.0  \n",
       "35-39                        7510.0  10853.00  15417.0  \n",
       "40-44                        7693.0  10904.00  15414.0  \n",
       "45-49                        7910.5  10566.75  15427.0  \n",
       "50-54                        7694.0  10306.50  15351.0  \n",
       "55-59                        7561.0  10028.25  15349.0  \n",
       "60-69                        7080.5   9668.25  15254.0  \n",
       "70-79                        5930.5   9119.75  14976.0  \n",
       "80+                          9771.5  11542.75  15038.0  \n",
       "What is your age (# years)?     NaN       NaN      NaN  "
      ]
     },
     "execution_count": 368,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('Kaggle_Salary_clean.csv')\n",
    "df.groupby('Q2').describe()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Have removed 'OTHER_TEXT' columns as they are insignificant to the data set . "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'Time from Start to Finish (seconds)', 'Q1', 'Q2', 'Q3',\n",
       "       'Q4', 'Q5', 'Q6', 'Q7', 'Q8',\n",
       "       ...\n",
       "       'Q49_Part_12', 'Q50_Part_1', 'Q50_Part_2', 'Q50_Part_3', 'Q50_Part_4',\n",
       "       'Q50_Part_5', 'Q50_Part_6', 'Q50_Part_7', 'Q50_Part_8', 'index'],\n",
       "      dtype='object', length=368)"
      ]
     },
     "execution_count": 369,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wot = [i for i in df.columns if i.endswith('_OTHER_TEXT')]\n",
    "salary = df\n",
    "for k in wot:\n",
    "    salary = salary.drop(columns = [k])\n",
    "salary.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The number of columns have been decreased from 395 to 368 ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15430, 368)"
      ]
     },
     "execution_count": 370,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.shape\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dropped index column which is float value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q49_Part_12</th>\n",
       "      <th>Q50_Part_1</th>\n",
       "      <th>Q50_Part_2</th>\n",
       "      <th>Q50_Part_3</th>\n",
       "      <th>Q50_Part_4</th>\n",
       "      <th>Q50_Part_5</th>\n",
       "      <th>Q50_Part_6</th>\n",
       "      <th>Q50_Part_7</th>\n",
       "      <th>Q50_Part_8</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Duration (in seconds)</td>\n",
       "      <td>What is your gender? - Selected Choice</td>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>In which country do you currently reside?</td>\n",
       "      <td>What is the highest level of formal education ...</td>\n",
       "      <td>Which best describes your undergraduate major?...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>In what industry is your current employer/cont...</td>\n",
       "      <td>How many years of experience do you have in yo...</td>\n",
       "      <td>...</td>\n",
       "      <td>What tools and methods do you use to make your...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>434</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Manufacturing/Fabrication</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>731</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>India</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not enough incentives to share my work</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>959</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Information technology, networking, or system ...</td>\n",
       "      <td>Other</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too expensive</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I had never considered making my work easier f...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 368 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 Time from Start to Finish (seconds)  \\\n",
       "0           0               Duration (in seconds)   \n",
       "1           2                                 434   \n",
       "2           3                                 718   \n",
       "3           5                                 731   \n",
       "4           7                                 959   \n",
       "\n",
       "                                       Q1                           Q2  \\\n",
       "0  What is your gender? - Selected Choice  What is your age (# years)?   \n",
       "1                                    Male                        30-34   \n",
       "2                                  Female                        30-34   \n",
       "3                                    Male                        22-24   \n",
       "4                                    Male                        35-39   \n",
       "\n",
       "                                          Q3  \\\n",
       "0  In which country do you currently reside?   \n",
       "1                                  Indonesia   \n",
       "2                   United States of America   \n",
       "3                                      India   \n",
       "4                                      Chile   \n",
       "\n",
       "                                                  Q4  \\\n",
       "0  What is the highest level of formal education ...   \n",
       "1                                  Bachelor’s degree   \n",
       "2                                    Master’s degree   \n",
       "3                                    Master’s degree   \n",
       "4                                    Doctoral degree   \n",
       "\n",
       "                                                  Q5  \\\n",
       "0  Which best describes your undergraduate major?...   \n",
       "1                 Engineering (non-computer focused)   \n",
       "2      Computer science (software engineering, etc.)   \n",
       "3                          Mathematics or statistics   \n",
       "4  Information technology, networking, or system ...   \n",
       "\n",
       "                                                  Q6  \\\n",
       "0  Select the title most similar to your current ...   \n",
       "1                                              Other   \n",
       "2                                     Data Scientist   \n",
       "3                                       Data Analyst   \n",
       "4                                              Other   \n",
       "\n",
       "                                                  Q7  \\\n",
       "0  In what industry is your current employer/cont...   \n",
       "1                          Manufacturing/Fabrication   \n",
       "2                                     I am a student   \n",
       "3                                     I am a student   \n",
       "4                                Academics/Education   \n",
       "\n",
       "                                                  Q8  ...  \\\n",
       "0  How many years of experience do you have in yo...  ...   \n",
       "1                                               5-10  ...   \n",
       "2                                                0-1  ...   \n",
       "3                                                0-1  ...   \n",
       "4                                              10-15  ...   \n",
       "\n",
       "                                         Q49_Part_12  \\\n",
       "0  What tools and methods do you use to make your...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_1  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                      Too expensive   \n",
       "\n",
       "                                          Q50_Part_2  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                 Too time-consuming   \n",
       "3                                 Too time-consuming   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_3  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_4  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_5  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3             Not enough incentives to share my work   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_6  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4  I had never considered making my work easier f...   \n",
       "\n",
       "                                          Q50_Part_7  \\\n",
       "0  What barriers prevent you from making your wor...   \n",
       "1                                                NaN   \n",
       "2                                                NaN   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "                                          Q50_Part_8 index  \n",
       "0  What barriers prevent you from making your wor...   NaN  \n",
       "1                                                NaN   0.0  \n",
       "2                                                NaN   1.0  \n",
       "3                                                NaN   2.0  \n",
       "4                                                NaN   3.0  \n",
       "\n",
       "[5 rows x 368 columns]"
      ]
     },
     "execution_count": 371,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.drop(['index'], axis = 1)\n",
    "salary.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Exploring data frame: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finding the columns which have NaN values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q14_Part_1</th>\n",
       "      <th>Q14_Part_2</th>\n",
       "      <th>Q14_Part_3</th>\n",
       "      <th>Q14_Part_4</th>\n",
       "      <th>Q14_Part_5</th>\n",
       "      <th>Q14_Part_6</th>\n",
       "      <th>Q14_Part_7</th>\n",
       "      <th>Q14_Part_8</th>\n",
       "      <th>Q14_Part_9</th>\n",
       "      <th>Q14_Part_10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Duration (in seconds)</td>\n",
       "      <td>What is your gender? - Selected Choice</td>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>In which country do you currently reside?</td>\n",
       "      <td>What is the highest level of formal education ...</td>\n",
       "      <td>Which best describes your undergraduate major?...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>In what industry is your current employer/cont...</td>\n",
       "      <td>How many years of experience do you have in yo...</td>\n",
       "      <td>...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "      <td>Which of the following hosted notebooks have y...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>434</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Manufacturing/Fabrication</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>731</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>India</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Azure Notebook</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>959</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Information technology, networking, or system ...</td>\n",
       "      <td>Other</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Google Colab</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15425</td>\n",
       "      <td>23844</td>\n",
       "      <td>1800</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>10-15</td>\n",
       "      <td>...</td>\n",
       "      <td>Kaggle Kernels</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Google Cloud Datalab</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15426</td>\n",
       "      <td>23845</td>\n",
       "      <td>129</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>Romania</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Student</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15427</td>\n",
       "      <td>23854</td>\n",
       "      <td>348</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Research Assistant</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15428</td>\n",
       "      <td>23855</td>\n",
       "      <td>575</td>\n",
       "      <td>Male</td>\n",
       "      <td>45-49</td>\n",
       "      <td>France</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Chief Officer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>Kaggle Kernels</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>JupyterHub/Binder</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15429</td>\n",
       "      <td>23857</td>\n",
       "      <td>370</td>\n",
       "      <td>Male</td>\n",
       "      <td>22-24</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15430 rows × 50 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0 Time from Start to Finish (seconds)  \\\n",
       "0               0               Duration (in seconds)   \n",
       "1               2                                 434   \n",
       "2               3                                 718   \n",
       "3               5                                 731   \n",
       "4               7                                 959   \n",
       "...           ...                                 ...   \n",
       "15425       23844                                1800   \n",
       "15426       23845                                 129   \n",
       "15427       23854                                 348   \n",
       "15428       23855                                 575   \n",
       "15429       23857                                 370   \n",
       "\n",
       "                                           Q1                           Q2  \\\n",
       "0      What is your gender? - Selected Choice  What is your age (# years)?   \n",
       "1                                        Male                        30-34   \n",
       "2                                      Female                        30-34   \n",
       "3                                        Male                        22-24   \n",
       "4                                        Male                        35-39   \n",
       "...                                       ...                          ...   \n",
       "15425                                    Male                        30-34   \n",
       "15426                                    Male                        22-24   \n",
       "15427                                    Male                        30-34   \n",
       "15428                                    Male                        45-49   \n",
       "15429                                    Male                        22-24   \n",
       "\n",
       "                                              Q3  \\\n",
       "0      In which country do you currently reside?   \n",
       "1                                      Indonesia   \n",
       "2                       United States of America   \n",
       "3                                          India   \n",
       "4                                          Chile   \n",
       "...                                          ...   \n",
       "15425                                Netherlands   \n",
       "15426                                    Romania   \n",
       "15427                                     Turkey   \n",
       "15428                                     France   \n",
       "15429                                     Turkey   \n",
       "\n",
       "                                                      Q4  \\\n",
       "0      What is the highest level of formal education ...   \n",
       "1                                      Bachelor’s degree   \n",
       "2                                        Master’s degree   \n",
       "3                                        Master’s degree   \n",
       "4                                        Doctoral degree   \n",
       "...                                                  ...   \n",
       "15425                                    Master’s degree   \n",
       "15426                                    Master’s degree   \n",
       "15427                                    Doctoral degree   \n",
       "15428                                    Doctoral degree   \n",
       "15429                                    Master’s degree   \n",
       "\n",
       "                                                      Q5  \\\n",
       "0      Which best describes your undergraduate major?...   \n",
       "1                     Engineering (non-computer focused)   \n",
       "2          Computer science (software engineering, etc.)   \n",
       "3                              Mathematics or statistics   \n",
       "4      Information technology, networking, or system ...   \n",
       "...                                                  ...   \n",
       "15425      Computer science (software engineering, etc.)   \n",
       "15426                          Mathematics or statistics   \n",
       "15427      Computer science (software engineering, etc.)   \n",
       "15428      Computer science (software engineering, etc.)   \n",
       "15429      Computer science (software engineering, etc.)   \n",
       "\n",
       "                                                      Q6  \\\n",
       "0      Select the title most similar to your current ...   \n",
       "1                                                  Other   \n",
       "2                                         Data Scientist   \n",
       "3                                           Data Analyst   \n",
       "4                                                  Other   \n",
       "...                                                  ...   \n",
       "15425                                  Software Engineer   \n",
       "15426                                            Student   \n",
       "15427                                 Research Assistant   \n",
       "15428                                      Chief Officer   \n",
       "15429                                  Software Engineer   \n",
       "\n",
       "                                                      Q7  \\\n",
       "0      In what industry is your current employer/cont...   \n",
       "1                              Manufacturing/Fabrication   \n",
       "2                                         I am a student   \n",
       "3                                         I am a student   \n",
       "4                                    Academics/Education   \n",
       "...                                                  ...   \n",
       "15425                               Computers/Technology   \n",
       "15426                                     I am a student   \n",
       "15427                                Academics/Education   \n",
       "15428                               Computers/Technology   \n",
       "15429                               Computers/Technology   \n",
       "\n",
       "                                                      Q8  ...  \\\n",
       "0      How many years of experience do you have in yo...  ...   \n",
       "1                                                   5-10  ...   \n",
       "2                                                    0-1  ...   \n",
       "3                                                    0-1  ...   \n",
       "4                                                  10-15  ...   \n",
       "...                                                  ...  ...   \n",
       "15425                                              10-15  ...   \n",
       "15426                                                0-1  ...   \n",
       "15427                                               5-10  ...   \n",
       "15428                                               5-10  ...   \n",
       "15429                                                0-1  ...   \n",
       "\n",
       "                                              Q14_Part_1  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                     Kaggle Kernels   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                     Kaggle Kernels   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_2  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                           Google Colab   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_3  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                         Azure Notebook   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_4  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_5  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                               Google Cloud Datalab   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_6  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_7  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_8  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                                NaN   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                              Q14_Part_9  \\\n",
       "0      Which of the following hosted notebooks have y...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "15425                                                NaN   \n",
       "15426                                                NaN   \n",
       "15427                                                NaN   \n",
       "15428                                  JupyterHub/Binder   \n",
       "15429                                                NaN   \n",
       "\n",
       "                                             Q14_Part_10  \n",
       "0      Which of the following hosted notebooks have y...  \n",
       "1                                                   None  \n",
       "2                                                   None  \n",
       "3                                                    NaN  \n",
       "4                                                    NaN  \n",
       "...                                                  ...  \n",
       "15425                                                NaN  \n",
       "15426                                                NaN  \n",
       "15427                                                NaN  \n",
       "15428                                                NaN  \n",
       "15429                                                NaN  \n",
       "\n",
       "[15430 rows x 50 columns]"
      ]
     },
     "execution_count": 372,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.isnull().sum(axis = 0).iloc[0:50]\n",
    "salary.iloc[:, :50]\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From observing the NaN values for the first 50 columns, it is clear that most of the NaN values are in multiple choice questions. Now we'll try to plot the same in the heat map ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x236b52e3390>"
      ]
     },
     "execution_count": 373,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(salary.iloc[:,:50].isnull(), yticklabels = False, cbar = False, cmap = 'viridis')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                                 0\n",
       "Time from Start to Finish (seconds)        0\n",
       "Q1                                         0\n",
       "Q2                                         0\n",
       "Q3                                         0\n",
       "Q4                                         0\n",
       "Q5                                       135\n",
       "Q6                                         0\n",
       "Q7                                         0\n",
       "Q8                                        76\n",
       "Q9                                         0\n",
       "Q10                                      292\n",
       "Q11_Part_1                              7966\n",
       "Q11_Part_2                             11186\n",
       "Q11_Part_3                             11278\n",
       "Q11_Part_4                              9705\n",
       "Q11_Part_5                             11845\n",
       "Q11_Part_6                             12914\n",
       "Q11_Part_7                             14758\n",
       "Q12_MULTIPLE_CHOICE                     1572\n",
       "Q12_Part_1_TEXT                            0\n",
       "Q12_Part_2_TEXT                            0\n",
       "Q12_Part_3_TEXT                            0\n",
       "Q12_Part_4_TEXT                            0\n",
       "Q12_Part_5_TEXT                            0\n",
       "Q13_Part_1                              5177\n",
       "Q13_Part_2                              9066\n",
       "Q13_Part_3                             10238\n",
       "Q13_Part_4                             11755\n",
       "Q13_Part_5                             15325\n",
       "Q13_Part_6                             12525\n",
       "Q13_Part_7                             11535\n",
       "Q13_Part_8                             11839\n",
       "Q13_Part_9                              9747\n",
       "Q13_Part_10                            11002\n",
       "Q13_Part_11                            12199\n",
       "Q13_Part_12                            12908\n",
       "Q13_Part_13                            11580\n",
       "Q13_Part_14                            15100\n",
       "Q13_Part_15                            14487\n",
       "Q14_Part_1                             11075\n",
       "Q14_Part_2                             12866\n",
       "Q14_Part_3                             14463\n",
       "Q14_Part_4                             15330\n",
       "Q14_Part_5                             14477\n",
       "Q14_Part_6                             15071\n",
       "Q14_Part_7                             15170\n",
       "Q14_Part_8                             15326\n",
       "Q14_Part_9                             11850\n",
       "Q14_Part_10                             9943\n",
       "dtype: int64"
      ]
     },
     "execution_count": 374,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "salary.isnull().sum(axis=0).iloc[:50]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The yellow marks in the plot shows the NaN values. Hence it can be observed that most of the mutliple choice columns have NaN values. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "REMOVING ROWS AND COLUMNS."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Removing rows based on countries . Countries have been filtered out on the basis of number of people who have been surveyed. \n",
    "\n",
    "Below is the countplot of all the number of people who have been surveyed from each country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'In which country do you currently reside?'),\n",
       " Text(0, 0, 'Indonesia'),\n",
       " Text(0, 0, 'United States of America'),\n",
       " Text(0, 0, 'India'),\n",
       " Text(0, 0, 'Chile'),\n",
       " Text(0, 0, 'Hungary'),\n",
       " Text(0, 0, 'France'),\n",
       " Text(0, 0, 'Argentina'),\n",
       " Text(0, 0, 'Japan'),\n",
       " Text(0, 0, 'Colombia'),\n",
       " Text(0, 0, 'Nigeria'),\n",
       " Text(0, 0, 'Spain'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'Iran, Islamic Republic of...'),\n",
       " Text(0, 0, 'United Kingdom of Great Britain and Northern Ireland'),\n",
       " Text(0, 0, 'Turkey'),\n",
       " Text(0, 0, 'Poland'),\n",
       " Text(0, 0, 'Kenya'),\n",
       " Text(0, 0, 'Denmark'),\n",
       " Text(0, 0, 'Netherlands'),\n",
       " Text(0, 0, 'Sweden'),\n",
       " Text(0, 0, 'Ukraine'),\n",
       " Text(0, 0, 'Canada'),\n",
       " Text(0, 0, 'Australia'),\n",
       " Text(0, 0, 'Russia'),\n",
       " Text(0, 0, 'Italy'),\n",
       " Text(0, 0, 'Mexico'),\n",
       " Text(0, 0, 'Germany'),\n",
       " Text(0, 0, 'I do not wish to disclose my location'),\n",
       " Text(0, 0, 'Singapore'),\n",
       " Text(0, 0, 'Brazil'),\n",
       " Text(0, 0, 'China'),\n",
       " Text(0, 0, 'South Africa'),\n",
       " Text(0, 0, 'South Korea'),\n",
       " Text(0, 0, 'Malaysia'),\n",
       " Text(0, 0, 'Hong Kong (S.A.R.)'),\n",
       " Text(0, 0, 'Portugal'),\n",
       " Text(0, 0, 'Thailand'),\n",
       " Text(0, 0, 'Morocco'),\n",
       " Text(0, 0, 'Pakistan'),\n",
       " Text(0, 0, 'Tunisia'),\n",
       " Text(0, 0, 'Ireland'),\n",
       " Text(0, 0, 'Israel'),\n",
       " Text(0, 0, 'Switzerland'),\n",
       " Text(0, 0, 'Bangladesh'),\n",
       " Text(0, 0, 'Romania'),\n",
       " Text(0, 0, 'Austria'),\n",
       " Text(0, 0, 'Belarus'),\n",
       " Text(0, 0, 'Viet Nam'),\n",
       " Text(0, 0, 'Czech Republic'),\n",
       " Text(0, 0, 'Philippines'),\n",
       " Text(0, 0, 'Belgium'),\n",
       " Text(0, 0, 'New Zealand'),\n",
       " Text(0, 0, 'Norway'),\n",
       " Text(0, 0, 'Finland'),\n",
       " Text(0, 0, 'Egypt'),\n",
       " Text(0, 0, 'Greece'),\n",
       " Text(0, 0, 'Peru'),\n",
       " Text(0, 0, 'Republic of Korea')]"
      ]
     },
     "execution_count": 375,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt0p[kl]\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(12,7))\n",
    "\n",
    "chart = sns.countplot(x = 'Q3', data = salary)\n",
    "type(chart)\n",
    "chart.set_xticklabels(chart.get_xticklabels(), rotation=90)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be observed that most of the countries are outliers. Countries where number of people who have been surveyed is less than 500 have been filtered out as they are less than 10% when compared with countries like India and USA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 368)"
      ]
     },
     "execution_count": 376,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa = salary[salary['Q3'] == 'United States of America']\n",
    "india = salary[salary['Q3'] == 'India']\n",
    "china = salary[salary['Q3'] == 'China']\n",
    "other = salary[salary['Q3'] == 'Other']\n",
    "russia = salary[salary['Q3'] == 'Russia']\n",
    "brazil = salary[salary['Q3'] == 'Brazil']\n",
    "germany = salary[salary['Q3'] == 'Germany']\n",
    "\n",
    "countries = pd.concat([usa,india,china,other,russia,brazil,germany])\n",
    "\n",
    "countries.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the number of rows have been decreased to 8904 from 15430 rows. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since rows have been reduced down. Now we reduce the number of columns."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we will look into columns which has only single choice answers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0                                0\n",
       "Time from Start to Finish (seconds)       0\n",
       "Q1                                        0\n",
       "Q2                                        0\n",
       "Q3                                        0\n",
       "Q4                                        0\n",
       "Q5                                       53\n",
       "Q6                                        0\n",
       "Q7                                        0\n",
       "Q8                                       41\n",
       "Q9                                        0\n",
       "Q10                                     160\n",
       "Q17                                    2474\n",
       "Q18                                    1086\n",
       "Q20                                    3433\n",
       "Q22                                    3678\n",
       "Q23                                    1171\n",
       "Q24                                    1181\n",
       "Q25                                    1199\n",
       "Q26                                    1205\n",
       "Q32                                    3050\n",
       "Q37                                    4715\n",
       "Q40                                    2262\n",
       "Q43                                    3276\n",
       "Q46                                    3227\n",
       "Q48                                    3219\n",
       "index                                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 377,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_columns = countries[['Unnamed: 0',\n",
    " 'Time from Start to Finish (seconds)',\n",
    " 'Q1',\n",
    " 'Q2',\n",
    " 'Q3',\n",
    " 'Q4',\n",
    " 'Q5',\n",
    " 'Q6',\n",
    " 'Q7',\n",
    " 'Q8',\n",
    " 'Q9',\n",
    " 'Q10','Q17','Q18','Q20','Q22',\n",
    " 'Q23',\n",
    " 'Q24',\n",
    " 'Q25',\n",
    " 'Q26', 'Q32','Q37','Q40','Q43','Q46','Q48','index']]\n",
    "\n",
    "single_columns.head()\n",
    "single_columns.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2369e85d7b8>"
      ]
     },
     "execution_count": 378,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(single_columns.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Can be observed that most of the NaN values are from Q17 to Q48."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 379,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "modeimputingcols = ['Q8','Q17','Q18','Q32','Q43']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now imputing mode and Nan values for the single choice columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For column Q8, since most of the people are inexperienced ( from 0 to 1 year experience ). The Null values in the columns are substitued by the mode of the columns which is 0-1 years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "41\n"
     ]
    }
   ],
   "source": [
    "print(countries['Q8'].isnull().sum())\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, '0-1'),\n",
       " Text(0, 0, '5-10'),\n",
       " Text(0, 0, '1-2'),\n",
       " Text(0, 0, '2-3'),\n",
       " Text(0, 0, '3-4'),\n",
       " Text(0, 0, '10-15'),\n",
       " Text(0, 0, '4-5'),\n",
       " Text(0, 0, '30 +'),\n",
       " Text(0, 0, '25-30'),\n",
       " Text(0, 0, '15-20'),\n",
       " Text(0, 0, '20-25')]"
      ]
     },
     "execution_count": 381,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "\n",
    "colQ8 = sns.countplot(x = 'Q8', data = countries)\n",
    "type(colQ8)\n",
    "colQ8.set_xticklabels(colQ8.get_xticklabels(), rotation=90)\n",
    "`2r"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "likewise , let us look at Q17."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 382,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Java'),\n",
       " Text(0, 0, 'Python'),\n",
       " Text(0, 0, 'SQL'),\n",
       " Text(0, 0, 'C/C++'),\n",
       " Text(0, 0, 'R'),\n",
       " Text(0, 0, 'C#/.NET'),\n",
       " Text(0, 0, 'Visual Basic/VBA'),\n",
       " Text(0, 0, 'Scala'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'Javascript/Typescript'),\n",
       " Text(0, 0, 'SAS/STATA'),\n",
       " Text(0, 0, 'PHP'),\n",
       " Text(0, 0, 'Bash'),\n",
       " Text(0, 0, 'MATLAB'),\n",
       " Text(0, 0, 'Ruby'),\n",
       " Text(0, 0, 'Go'),\n",
       " Text(0, 0, 'Julia')]"
      ]
     },
     "execution_count": 382,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "\n",
    "colQ17 = sns.countplot(x = 'Q17', data = countries)\n",
    "type(colQ17)\n",
    "colQ17.set_xticklabels(colQ17.get_xticklabels(), rotation=90)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For column Q18, since nearly 70% of the options chosen is python than any other programming language. Imputing the 45 NaN values ( which is harldy 0.5 % of the total number of values) would be a good fit than applying NaN values.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Python        5906\n",
       "R              935\n",
       "SQL            444\n",
       "C++            126\n",
       "MATLAB          98\n",
       "Java            75\n",
       "Other           75\n",
       "None            45\n",
       "SAS             35\n",
       "Scala           28\n",
       "Javascript      28\n",
       "VBA             14\n",
       "Go               9\n",
       "Name: Q18, dtype: int64"
      ]
     },
     "execution_count": 383,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "countries['Q18'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 384,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Python'),\n",
       " Text(0, 0, 'SQL'),\n",
       " Text(0, 0, 'Other'),\n",
       " Text(0, 0, 'R'),\n",
       " Text(0, 0, 'C++'),\n",
       " Text(0, 0, 'Javascript'),\n",
       " Text(0, 0, 'SAS'),\n",
       " Text(0, 0, 'MATLAB'),\n",
       " Text(0, 0, 'Java'),\n",
       " Text(0, 0, 'None'),\n",
       " Text(0, 0, 'VBA'),\n",
       " Text(0, 0, 'Scala'),\n",
       " Text(0, 0, 'Go')]"
      ]
     },
     "execution_count": 384,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "\n",
    "colQ18 = sns.countplot(x = 'Q18', data = countries)\n",
    "type(colQ18)\n",
    "colQ18.set_xticklabels(colQ18.get_xticklabels(), rotation=90)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 385,
   "metadata": {},
   "outputs": [],
   "source": [
    "#countries['Q32'].unique()\n",
    "#countries['Q43'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "metadata": {},
   "outputs": [],
   "source": [
    "countries['Q8'].fillna(countries['Q8'].mode()[0],inplace=True)\n",
    "countries['Q17'].fillna(countries['Q17'].mode()[0],inplace=True)\n",
    "countries['Q18'].fillna(countries['Q18'].mode()[0],inplace=True)\n",
    "countries['Q32'].fillna(countries['Q32'].mode()[0],inplace=True)\n",
    "countries['Q43'].fillna(countries['Q43'].mode()[0],inplace=True)\n",
    "countries['Q46'].fillna(countries['Q43'].mode()[0],inplace=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 387,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q7</th>\n",
       "      <th>Q8</th>\n",
       "      <th>...</th>\n",
       "      <th>Q49_Part_12</th>\n",
       "      <th>Q50_Part_1</th>\n",
       "      <th>Q50_Part_2</th>\n",
       "      <th>Q50_Part_3</th>\n",
       "      <th>Q50_Part_4</th>\n",
       "      <th>Q50_Part_5</th>\n",
       "      <th>Q50_Part_6</th>\n",
       "      <th>Q50_Part_7</th>\n",
       "      <th>Q50_Part_8</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>0-1</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>823</td>\n",
       "      <td>Male</td>\n",
       "      <td>40-44</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>Other</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not enough incentives to share my work</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>1917</td>\n",
       "      <td>Male</td>\n",
       "      <td>25-29</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>Research Assistant</td>\n",
       "      <td>Academics/Education</td>\n",
       "      <td>1-2</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>2150</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-39</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Some college/university study without earning ...</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Other</td>\n",
       "      <td>Military/Security/Defense</td>\n",
       "      <td>5-10</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>1327</td>\n",
       "      <td>Male</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>A business discipline (accounting, economics, ...</td>\n",
       "      <td>Manager</td>\n",
       "      <td>Insurance/Risk Assessment</td>\n",
       "      <td>2-3</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too expensive</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Requires too much technical knowledge</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 368 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0 Time from Start to Finish (seconds)      Q1     Q2  \\\n",
       "2            3                                 718  Female  30-34   \n",
       "7           12                                 823    Male  40-44   \n",
       "9           14                                1917    Male  25-29   \n",
       "14          19                                2150    Male  35-39   \n",
       "17          23                                1327    Male  30-34   \n",
       "\n",
       "                          Q3  \\\n",
       "2   United States of America   \n",
       "7   United States of America   \n",
       "9   United States of America   \n",
       "14  United States of America   \n",
       "17  United States of America   \n",
       "\n",
       "                                                   Q4  \\\n",
       "2                                     Master’s degree   \n",
       "7                                     Master’s degree   \n",
       "9                                   Bachelor’s degree   \n",
       "14  Some college/university study without earning ...   \n",
       "17                                  Bachelor’s degree   \n",
       "\n",
       "                                                   Q5                  Q6  \\\n",
       "2       Computer science (software engineering, etc.)      Data Scientist   \n",
       "7                  Engineering (non-computer focused)      Data Scientist   \n",
       "9                           Mathematics or statistics  Research Assistant   \n",
       "14      Computer science (software engineering, etc.)               Other   \n",
       "17  A business discipline (accounting, economics, ...             Manager   \n",
       "\n",
       "                           Q7    Q8  ... Q49_Part_12     Q50_Part_1  \\\n",
       "2              I am a student   0-1  ...         NaN            NaN   \n",
       "7                       Other  5-10  ...         NaN            NaN   \n",
       "9         Academics/Education   1-2  ...         NaN            NaN   \n",
       "14  Military/Security/Defense  5-10  ...         NaN            NaN   \n",
       "17  Insurance/Risk Assessment   2-3  ...         NaN  Too expensive   \n",
       "\n",
       "            Q50_Part_2                             Q50_Part_3 Q50_Part_4  \\\n",
       "2   Too time-consuming                                    NaN        NaN   \n",
       "7   Too time-consuming                                    NaN        NaN   \n",
       "9   Too time-consuming                                    NaN        NaN   \n",
       "14  Too time-consuming                                    NaN        NaN   \n",
       "17                 NaN  Requires too much technical knowledge        NaN   \n",
       "\n",
       "                                Q50_Part_5 Q50_Part_6 Q50_Part_7 Q50_Part_8  \\\n",
       "2                                      NaN        NaN        NaN        NaN   \n",
       "7   Not enough incentives to share my work        NaN        NaN        NaN   \n",
       "9                                      NaN        NaN        NaN        NaN   \n",
       "14                                     NaN        NaN        NaN        NaN   \n",
       "17                                     NaN        NaN        NaN        NaN   \n",
       "\n",
       "   index  \n",
       "2    1.0  \n",
       "7    6.0  \n",
       "9    8.0  \n",
       "14  13.0  \n",
       "17  16.0  \n",
       "\n",
       "[5 rows x 368 columns]"
      ]
     },
     "execution_count": 387,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "countries.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 388,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x236ce0defd0>"
      ]
     },
     "execution_count": 388,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (10,6))\n",
    "\n",
    "sns.heatmap(countries.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above graphs shows the number of NAN values present in the dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now removing columns and justifying\n",
    "\n",
    "Unnamed column has been removed as they are insignificant.\n",
    "\n",
    "Q12_part_text have been removed as they are just random binary numbers. But Q12_multiple choice questions are selected.\n",
    "\n",
    "Q16 and Q17 have similar type of questions. Hence Q16 has been removed.\n",
    "Removing Q16 reduces the number of columns.Also Q17 is more relevant because it tells us about how often the language is used and will be more helpful in predicting the salary. \n",
    "\n",
    "Now comparing Q19, Q20 and Q21. Q20 has more relevance to predict the salary. This is because the Q20 talks about the frequent usage of ML library rather than in the past few years. This is will be more related to skills in data science than Q19 and Q21.\n",
    "\n",
    "Now moving on to Q31 and Q32. Both have similar questions. Q32 talks about the frequent usage of data in school or work. Deleting Q31 will result in reduction in columns and also the model will have less features to deal with. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 389,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 300)"
      ]
     },
     "execution_count": 389,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s1 = countries.drop(['Unnamed: 0','Q12_Part_1_TEXT','Q12_Part_2_TEXT','Q12_Part_3_TEXT','Q12_Part_4_TEXT','Q12_Part_5_TEXT', 'Q16_Part_1','Q16_Part_2','Q16_Part_3','Q16_Part_4','Q16_Part_5','Q16_Part_6','Q16_Part_7','Q16_Part_8','Q16_Part_9','Q16_Part_10','Q16_Part_11','Q16_Part_12','Q16_Part_13','Q16_Part_14','Q16_Part_15','Q16_Part_16','Q16_Part_17','Q16_Part_18',\n",
    "'Q19_Part_1','Q19_Part_2','Q19_Part_3','Q19_Part_4','Q19_Part_5','Q19_Part_6','Q19_Part_7','Q19_Part_8','Q19_Part_9','Q19_Part_10','Q19_Part_11','Q19_Part_12','Q19_Part_13','Q19_Part_14','Q19_Part_15','Q19_Part_16','Q19_Part_17','Q19_Part_18','Q19_Part_19','Q21_Part_1','Q21_Part_2','Q21_Part_3','Q21_Part_4','Q21_Part_5','Q21_Part_6','Q21_Part_7','Q21_Part_8','Q21_Part_9','Q21_Part_10','Q21_Part_11','Q21_Part_12','Q21_Part_13', \n",
    "'Q31_Part_1','Q31_Part_2','Q31_Part_3','Q31_Part_4','Q31_Part_5','Q31_Part_6','Q31_Part_7','Q31_Part_8','Q31_Part_9','Q31_Part_10','Q31_Part_11','Q31_Part_12'], axis = 1)\n",
    "\n",
    "\n",
    "# q1617=[['Q17','Q16_Part_15']]#Q18 dropped earlier\n",
    "# list(countries.iloc[0][q1617])\n",
    "\n",
    "s1.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Q34 and Q35 have similar questions . Either one of the columns can be removed as they are similar and do not add much to the accuracy of the model and only complexes the model. hence Q34 is deleted\n",
    "\n",
    "Comparing Q36 and Q37. \n",
    "Q36 tells us about the online platforms in which people began and Q37 tells us about how much time they have spent on various online platfroms . Q37 will be correlated to the skill set and salary prediction than Q36. Hence Q36 can be removed. Also decreasing the number of columns and complexity of the model.\n",
    "\n",
    "Q38 has been deleted. Favourite media sources would not affect the salary predictions\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 390,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 220)"
      ]
     },
     "execution_count": 390,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "s4 = s1.drop(['Q34_Part_1','Q34_Part_2','Q34_Part_3','Q34_Part_4','Q34_Part_5','Q34_Part_6','Q36_Part_1','Q36_Part_2','Q36_Part_3','Q36_Part_4','Q36_Part_5','Q36_Part_6','Q36_Part_7','Q36_Part_8','Q36_Part_9','Q36_Part_10','Q36_Part_11','Q36_Part_12','Q36_Part_13',\n",
    "'Q38_Part_1','Q38_Part_2','Q38_Part_3','Q38_Part_4','Q38_Part_5','Q38_Part_6','Q38_Part_7','Q38_Part_8','Q38_Part_9','Q38_Part_10','Q38_Part_11','Q38_Part_12','Q38_Part_13','Q38_Part_14','Q38_Part_15','Q38_Part_16','Q38_Part_17','Q38_Part_18','Q38_Part_19','Q38_Part_20','Q38_Part_21','Q38_Part_22','Q49_Part_1','Q49_Part_2','Q49_Part_3','Q49_Part_4','Q49_Part_5','Q49_Part_6','Q49_Part_7','Q49_Part_8','Q49_Part_9','Q49_Part_10','Q49_Part_11','Q49_Part_12'], axis = 1)\n",
    "s4.shape\n",
    "s5 = s4.drop(['Q50_Part_1','Q50_Part_2','Q50_Part_3','Q50_Part_4','Q50_Part_5','Q50_Part_6','Q50_Part_7','Q50_Part_8','index'], axis = 1)\n",
    "s5.shape\n",
    "s6 = s5.drop(['Q32_OTHER','Q26','Q47_Part_1','Q47_Part_2','Q47_Part_3','Q47_Part_4','Q47_Part_5','Q47_Part_6','Q47_Part_7','Q47_Part_8','Q47_Part_9','Q47_Part_10','Q47_Part_11','Q47_Part_12','Q47_Part_13','Q47_Part_14','Q47_Part_15','Q47_Part_16'], axis = 1)\n",
    "s6.shape\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ONE HOT ENCODING HAS BEEN DONE TO THE SINGLE ANSWER COLUMNS AND MULTIPLE CHOICE COLUMNS AFTER EXPLORATORY DATA ANALYSIS!!!!!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### EXPLORATORY DATA ANALYSIS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TREND 1 : HISTOGRAM PLOT OF Job descriptions\n",
    "\n",
    "It can be seen that most of the people who were surveyed were primarily dataScientists and Students. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 391,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, 'Data Scientist'),\n",
       " Text(1, 0, 'Research Assistant'),\n",
       " Text(2, 0, 'Other'),\n",
       " Text(3, 0, 'Manager'),\n",
       " Text(4, 0, 'Data Analyst'),\n",
       " Text(5, 0, 'Software Engineer'),\n",
       " Text(6, 0, 'Student'),\n",
       " Text(7, 0, 'Research Scientist'),\n",
       " Text(8, 0, 'Data Engineer'),\n",
       " Text(9, 0, 'Developer Advocate'),\n",
       " Text(10, 0, 'Product/Project Manager'),\n",
       " Text(11, 0, 'Business Analyst'),\n",
       " Text(12, 0, 'Principal Investigator'),\n",
       " Text(13, 0, 'Statistician'),\n",
       " Text(14, 0, 'Chief Officer'),\n",
       " Text(15, 0, 'DBA/Database Engineer'),\n",
       " Text(16, 0, 'Consultant'),\n",
       " Text(17, 0, 'Marketing Analyst'),\n",
       " Text(18, 0, 'Salesperson'),\n",
       " Text(19, 0, 'Data Journalist')]"
      ]
     },
     "execution_count": 391,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 2160x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(30,7))\n",
    "\n",
    "jobplot = sns.countplot(x = 'Q6', data = s6)\n",
    "chart.set_xticklabels(jobplot.get_xticklabels(), rotation=90)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Trend 2: Box plot has been plotted for the Gender and Salary columns . "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "STEP 1) NOTE : Have converted the salary column (categorical) to a numeric column (numerical) for plotting the graphs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 392,
   "metadata": {},
   "outputs": [],
   "source": [
    "def score_to_numeric(x):\n",
    "    if x=='0-10,000':\n",
    "        return 1\n",
    "    if x=='10-20,000':\n",
    "        return 2\n",
    "    if x=='20-30,000':\n",
    "        return 3\n",
    "    if x=='30-40,000':\n",
    "        return 4\n",
    "    if x=='40-50,000':\n",
    "        return 5\n",
    "    if x=='50-60,000':\n",
    "        return 6\n",
    "    if x=='60-70,000':\n",
    "        return 7\n",
    "    if x=='70-80,000':\n",
    "        return 8\n",
    "    if x=='80-90,000':\n",
    "        return 9\n",
    "    if x=='90-100,000':\n",
    "        return 10\n",
    "    if x=='100-125,000':\n",
    "        return 11\n",
    "    if x=='125-150,000':\n",
    "        return 12\n",
    "    if x=='150-200,000':\n",
    "        return 13\n",
    "    if x=='200-250,000':\n",
    "        return 14\n",
    "    if x=='250-300,000':\n",
    "        return 15\n",
    "    if x=='300-400,000':\n",
    "        return 16\n",
    "    if x=='400-500,000':\n",
    "        return 17\n",
    "    if x=='500,000+':\n",
    "        return 18"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 393,
   "metadata": {},
   "outputs": [],
   "source": [
    "s6['Q9_num'] = s6['Q9'].apply(score_to_numeric)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the box plot below, Salary column and Gender category has been interpreted.\n",
    "It can be observed that Female and Male have the same mean of salaries when compared with other people. The mean of salaries seems to be the highest for people who didn't prefer to expose their gender identity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 394,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x236a7c224e0>"
      ]
     },
     "execution_count": 394,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x = 'Q1', y = 'Q9_num', data = s6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 395,
   "metadata": {},
   "outputs": [],
   "source": [
    "from wordcloud import WordCloud, STOPWORDS\n",
    "import string\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cloudcountry = salary['Q3']\n",
    "comment_words = ' '\n",
    "stopwords = set(STOPWORDS) \n",
    "  \n",
    "for value in cloudcountry: \n",
    "      \n",
    "    # typecaste each val to string \n",
    "    value = str(value) \n",
    "  \n",
    "    # split the value \n",
    "    tokens = value.split() \n",
    "      \n",
    "    # Converts each token into lowercase \n",
    "    for i in range(len(tokens)): \n",
    "        tokens[i] = tokens[i].lower() \n",
    "          \n",
    "    for words in tokens: \n",
    "        comment_words = comment_words + words + ' '\n",
    "\n",
    "wordcloud = WordCloud(width = 800, height = 800, \n",
    "                background_color ='white', \n",
    "                stopwords = stopwords, \n",
    "                min_font_size = 10).generate(comment_words) \n",
    "  \n",
    "# plot the WordCloud image                        \n",
    "plt.figure(figsize = (8, 8)) \n",
    "plt.imshow(wordcloud) \n",
    "plt.axis(\"off\") \n",
    "plt.tight_layout(pad = 0) \n",
    "  \n",
    "plt.show()        \n",
    "  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be seen that most of the people who were surveyed were primarily from USA and India. Not much of the people were been surveyed from countries like China , Russian and Germany. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### FEATURE SELECTION - RANDOM FOREST CLASSIFIER"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Feature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\n",
    "\n",
    "The feature selection technique is important because it helps in selecting only the important features of the columns and increases the accuracy of the model.\n",
    "\n",
    "Random Forest feature selection technique have been used for selecting the features. \n",
    "They provide good predictive performance , low overfitting and easy interpretability.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dropping the categorical target column from the dataset and assigning to a dataset seperately."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 397,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 219)"
      ]
     },
     "execution_count": 397,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = s6.drop(['Q9','Q9_num'], axis = 1)\n",
    "y = s6['Q9']\n",
    "\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Converting 'Time from Start to Finish (seconds)' column into a  numeric column from categorical column inorder to reduce the number of features or columns when encoded by get_dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 398,
   "metadata": {},
   "outputs": [],
   "source": [
    "X['Time from Start to Finish (seconds)'] = pd.to_numeric(X['Time from Start to Finish (seconds)'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### One hot encoding has been to all the multiple choice columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 399,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "MCQ = ['Q11_Part_1','Q11_Part_2','Q11_Part_3','Q11_Part_4','Q11_Part_5','Q11_Part_6','Q11_Part_7'\n",
    ",'Q13_Part_1','Q13_Part_2','Q13_Part_3','Q13_Part_4','Q13_Part_5','Q13_Part_6','Q13_Part_7','Q13_Part_8','Q13_Part_9','Q13_Part_10','Q13_Part_11','Q13_Part_12','Q13_Part_13','Q13_Part_14','Q13_Part_15','Q14_Part_1','Q14_Part_2','Q14_Part_3','Q14_Part_4','Q14_Part_5','Q14_Part_6','Q14_Part_7','Q14_Part_8','Q14_Part_9','Q14_Part_10','Q14_Part_11','Q15_Part_1','Q15_Part_2','Q15_Part_3','Q15_Part_4','Q15_Part_5','Q15_Part_6','Q15_Part_7',\n",
    "'Q27_Part_1','Q27_Part_2','Q27_Part_3','Q27_Part_4','Q27_Part_5','Q27_Part_6','Q27_Part_7','Q27_Part_8','Q27_Part_9','Q27_Part_10','Q27_Part_11','Q27_Part_12','Q27_Part_13','Q27_Part_14','Q27_Part_15','Q27_Part_16','Q27_Part_17','Q27_Part_18','Q27_Part_19','Q27_Part_20','Q28_Part_1','Q28_Part_2','Q28_Part_3','Q28_Part_4','Q28_Part_5','Q28_Part_6','Q28_Part_7','Q28_Part_8','Q28_Part_9','Q28_Part_10',\n",
    "'Q28_Part_11','Q28_Part_12','Q28_Part_13','Q28_Part_14','Q28_Part_15','Q28_Part_16','Q28_Part_17','Q28_Part_18','Q28_Part_19','Q28_Part_20','Q28_Part_21','Q28_Part_22','Q28_Part_23','Q28_Part_24','Q28_Part_25','Q28_Part_26','Q28_Part_27','Q28_Part_28','Q28_Part_29','Q28_Part_30','Q28_Part_31','Q28_Part_32','Q28_Part_33','Q28_Part_34','Q28_Part_35','Q28_Part_36','Q28_Part_37','Q28_Part_38','Q28_Part_39','Q28_Part_40','Q28_Part_41','Q28_Part_42','Q28_Part_43','Q29_Part_1','Q29_Part_2','Q29_Part_3','Q29_Part_4','Q29_Part_5','Q29_Part_6','Q29_Part_7','Q29_Part_8','Q29_Part_9','Q29_Part_10','Q29_Part_11','Q29_Part_12','Q29_Part_13','Q29_Part_14','Q29_Part_15','Q29_Part_16','Q29_Part_17','Q29_Part_18','Q29_Part_19','Q29_Part_20','Q29_Part_21','Q29_Part_22','Q29_Part_23','Q29_Part_24','Q29_Part_25','Q29_Part_26','Q29_Part_27','Q29_Part_28','Q30_Part_1','Q30_Part_2','Q30_Part_3','Q30_Part_4','Q30_Part_5','Q30_Part_6','Q30_Part_7','Q30_Part_8','Q30_Part_9','Q30_Part_10','Q30_Part_11','Q30_Part_12','Q30_Part_13','Q30_Part_14','Q30_Part_15','Q30_Part_16','Q30_Part_17','Q30_Part_18','Q30_Part_19','Q30_Part_20','Q30_Part_21','Q30_Part_22','Q30_Part_23','Q30_Part_24','Q30_Part_25','Q33_Part_1','Q33_Part_2','Q33_Part_3','Q33_Part_4','Q33_Part_5','Q33_Part_6','Q33_Part_7','Q33_Part_8','Q33_Part_9','Q33_Part_10','Q33_Part_11','Q35_Part_1','Q35_Part_2','Q35_Part_3','Q35_Part_4','Q35_Part_5','Q35_Part_6',\n",
    "'Q39_Part_1','Q39_Part_2','Q41_Part_1','Q41_Part_2','Q41_Part_3','Q42_Part_1','Q42_Part_2','Q42_Part_3','Q42_Part_4','Q42_Part_5','Q44_Part_1','Q44_Part_2','Q44_Part_3','Q44_Part_4','Q44_Part_5','Q44_Part_6','Q45_Part_1','Q45_Part_2','Q45_Part_3','Q45_Part_4','Q45_Part_5','Q45_Part_6']\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 400,
   "metadata": {},
   "outputs": [],
   "source": [
    "MCQdf = X[MCQ].notnull().astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 401,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 195)"
      ]
     },
     "execution_count": 401,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MCQdf.shape\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now encoding only the remaining single choice columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 402,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8904, 24)"
      ]
     },
     "execution_count": 402,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "singledf = X[[i for i in X.columns if i not in MCQ]]\n",
    "singledf.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 403,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1_Female</th>\n",
       "      <th>Q1_Male</th>\n",
       "      <th>Q1_Prefer not to say</th>\n",
       "      <th>Q1_Prefer to self-describe</th>\n",
       "      <th>Q2_18-21</th>\n",
       "      <th>Q2_22-24</th>\n",
       "      <th>Q2_25-29</th>\n",
       "      <th>Q2_30-34</th>\n",
       "      <th>Q2_35-39</th>\n",
       "      <th>...</th>\n",
       "      <th>Q46_50-60</th>\n",
       "      <th>Q46_60-70</th>\n",
       "      <th>Q46_70-80</th>\n",
       "      <th>Q46_80-90</th>\n",
       "      <th>Q46_90-100</th>\n",
       "      <th>Q48_I am confident that I can explain the outputs of most if not all ML models</th>\n",
       "      <th>Q48_I am confident that I can understand and explain the outputs of many but not all ML models</th>\n",
       "      <th>Q48_I do not know; I have no opinion on the matter</th>\n",
       "      <th>Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs</th>\n",
       "      <th>Q48_Yes, most ML models are \"black boxes\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>718</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>823</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1917</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>2150</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>1327</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 249 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Time from Start to Finish (seconds)  Q1_Female  Q1_Male  \\\n",
       "2                                   718          1        0   \n",
       "7                                   823          0        1   \n",
       "9                                  1917          0        1   \n",
       "14                                 2150          0        1   \n",
       "17                                 1327          0        1   \n",
       "\n",
       "    Q1_Prefer not to say  Q1_Prefer to self-describe  Q2_18-21  Q2_22-24  \\\n",
       "2                      0                           0         0         0   \n",
       "7                      0                           0         0         0   \n",
       "9                      0                           0         0         0   \n",
       "14                     0                           0         0         0   \n",
       "17                     0                           0         0         0   \n",
       "\n",
       "    Q2_25-29  Q2_30-34  Q2_35-39  ...  Q46_50-60  Q46_60-70  Q46_70-80  \\\n",
       "2          0         1         0  ...          0          0          0   \n",
       "7          0         0         0  ...          0          0          0   \n",
       "9          1         0         0  ...          0          0          0   \n",
       "14         0         0         1  ...          0          0          0   \n",
       "17         0         1         0  ...          0          0          0   \n",
       "\n",
       "    Q46_80-90  Q46_90-100  \\\n",
       "2           0           0   \n",
       "7           0           0   \n",
       "9           0           0   \n",
       "14          0           0   \n",
       "17          1           0   \n",
       "\n",
       "    Q48_I am confident that I can explain the outputs of most if not all ML models  \\\n",
       "2                                                   1                                \n",
       "7                                                   0                                \n",
       "9                                                   0                                \n",
       "14                                                  0                                \n",
       "17                                                  0                                \n",
       "\n",
       "    Q48_I am confident that I can understand and explain the outputs of many but not all ML models  \\\n",
       "2                                                   0                                                \n",
       "7                                                   1                                                \n",
       "9                                                   0                                                \n",
       "14                                                  1                                                \n",
       "17                                                  1                                                \n",
       "\n",
       "    Q48_I do not know; I have no opinion on the matter  \\\n",
       "2                                                   0    \n",
       "7                                                   0    \n",
       "9                                                   0    \n",
       "14                                                  0    \n",
       "17                                                  0    \n",
       "\n",
       "    Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs  \\\n",
       "2                                                   0                                                         \n",
       "7                                                   0                                                         \n",
       "9                                                   1                                                         \n",
       "14                                                  0                                                         \n",
       "17                                                  0                                                         \n",
       "\n",
       "    Q48_Yes, most ML models are \"black boxes\"  \n",
       "2                                           0  \n",
       "7                                           0  \n",
       "9                                           0  \n",
       "14                                          0  \n",
       "17                                          0  \n",
       "\n",
       "[5 rows x 249 columns]"
      ]
     },
     "execution_count": 403,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "singledf1 = pd.get_dummies(singledf)\n",
    "\n",
    "singledf1.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 404,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 404,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concateddf = pd.concat([singledf1,MCQdf], axis =1)\n",
    "\n",
    "type(concateddf)\n",
    "\n",
    "y = pd.DataFrame(y)\n",
    "\n",
    "type(y)\n",
    "\n",
    "type(concateddf)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Label encoding is done for the target column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 405,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0-10,000' '10-20,000' '100-125,000' '125-150,000' '150-200,000'\n",
      " '20-30,000' '200-250,000' '250-300,000' '30-40,000' '300-400,000'\n",
      " '40-50,000' '400-500,000' '50-60,000' '500,000+' '60-70,000' '70-80,000'\n",
      " '80-90,000' '90-100,000']\n",
      "[[ 0]\n",
      " [ 3]\n",
      " [ 8]\n",
      " ...\n",
      " [14]\n",
      " [12]\n",
      " [17]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn import preprocessing\n",
    "le = preprocessing.LabelEncoder()\n",
    "le.fit(y)\n",
    "print(le.classes_)\n",
    "y=le.transform(y).reshape(-1,1)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 406,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8904, 444)\n",
      "(8904, 1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 406,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(concateddf.shape)\n",
    "print(y.shape)\n",
    "type(y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 407,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 407,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Converting y again to a data frame\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 408,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 408,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "y = pd.DataFrame(y)\n",
    "type(y)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Now import random forest classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 409,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "from sklearn.ensemble.forest import RandomForestClassifier\n",
    "from sklearn.feature_selection import SelectFromModel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In all feature selection procedures, it is a good practice to select the features by examining only the training set. This is to avoid overfitting. This is the reason behind splitting the data into training and test data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 410,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set :  (7123, 444) (7123, 1)\n",
      "Testing set : (1781, 444) (1781, 1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(concateddf, y, test_size=0.20, random_state=42)\n",
    "\n",
    "\n",
    "print('Training set : ',X_train.shape,y_train.shape)\n",
    "\n",
    "print('Testing set :',X_test.shape,y_test.shape)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "EXPLANATION OF WHY RANDOM CLASSIFIER WAS USED: from 'SelectFromModel',  it will select those features which importance is greater than the mean importance of all the features by default, but we can alter this threshold if we want.This is one of the main reasons behind choosing random forest feature selection technique.\n",
    "\n",
    "How random forest are randomised : By selecting the data points used to build a tree and by selecting the features in each split test.\n",
    "\n",
    "Benefits : They work well without heavy tuning of the parameters and dont require scaling of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 411,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SelectFromModel(estimator=RandomForestClassifier(bootstrap=True,\n",
       "                                                 class_weight=None,\n",
       "                                                 criterion='gini',\n",
       "                                                 max_depth=None,\n",
       "                                                 max_features='auto',\n",
       "                                                 max_leaf_nodes=None,\n",
       "                                                 min_impurity_decrease=0.0,\n",
       "                                                 min_impurity_split=None,\n",
       "                                                 min_samples_leaf=1,\n",
       "                                                 min_samples_split=2,\n",
       "                                                 min_weight_fraction_leaf=0.0,\n",
       "                                                 n_estimators='warn',\n",
       "                                                 n_jobs=None, oob_score=False,\n",
       "                                                 random_state=None, verbose=0,\n",
       "                                                 warm_start=False),\n",
       "                max_features=None, norm_order=1, prefit=False, threshold=None)"
      ]
     },
     "execution_count": 411,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel = SelectFromModel(RandomForestClassifier())\n",
    "sel.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "sel.get_support():\n",
    "\n",
    "It will return an array of boolean values. True for the features whose importance is greater than the mean importance and False for the rest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 412,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True,  True,  True, False, False,  True,  True,  True,  True,\n",
       "        True,  True, False, False, False, False, False, False,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True, False,\n",
       "        True, False, False, False,  True,  True,  True, False, False,\n",
       "       False, False, False,  True, False, False,  True, False,  True,\n",
       "       False,  True, False,  True, False, False,  True, False, False,\n",
       "       False,  True, False, False, False,  True, False,  True, False,\n",
       "        True,  True,  True, False,  True, False, False, False,  True,\n",
       "       False, False, False,  True, False, False, False,  True, False,\n",
       "       False, False,  True,  True,  True, False,  True, False, False,\n",
       "        True, False,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True, False, False,\n",
       "       False, False, False, False, False, False, False, False,  True,\n",
       "        True, False, False,  True, False, False, False, False, False,\n",
       "       False, False, False, False,  True,  True, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False,  True, False,  True, False, False, False, False,\n",
       "       False, False, False, False, False, False, False,  True, False,\n",
       "       False,  True, False,  True, False,  True, False,  True,  True,\n",
       "        True,  True, False, False,  True, False, False,  True,  True,\n",
       "       False, False,  True, False,  True, False,  True, False, False,\n",
       "        True, False,  True, False, False, False, False, False,  True,\n",
       "       False, False,  True,  True,  True, False,  True,  True, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True, False,  True, False,  True, False,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False, False,  True,\n",
       "        True,  True, False, False, False, False, False, False, False,\n",
       "        True, False,  True, False,  True, False,  True,  True,  True,\n",
       "        True,  True,  True, False,  True,  True,  True,  True, False,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True, False,\n",
       "       False,  True,  True, False, False, False, False, False, False,\n",
       "        True,  True, False,  True,  True,  True, False, False,  True,\n",
       "       False,  True,  True, False, False, False,  True, False, False,\n",
       "        True, False, False, False, False, False, False, False, False,\n",
       "       False,  True, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False,  True,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "        True,  True,  True,  True,  True, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False, False, False,\n",
       "       False, False, False, False, False, False, False,  True, False,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True, False, False, False, False, False, False, False,  True,\n",
       "       False, False, False, False,  True,  True,  True,  True, False,\n",
       "        True,  True,  True,  True, False,  True, False,  True,  True,\n",
       "        True,  True, False])"
      ]
     },
     "execution_count": 412,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel.get_support()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 413,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "161"
      ]
     },
     "execution_count": 413,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selected_feat= concateddf.columns[(sel.get_support())]\n",
    "len(selected_feat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 414,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Time from Start to Finish (seconds)', 'Q1_Female', 'Q1_Male',\n",
      "       'Q2_18-21', 'Q2_22-24', 'Q2_25-29', 'Q2_30-34', 'Q2_35-39', 'Q2_40-44',\n",
      "       'Q3_Brazil',\n",
      "       ...\n",
      "       'Q42_Part_4', 'Q44_Part_1', 'Q44_Part_2', 'Q44_Part_3', 'Q44_Part_4',\n",
      "       'Q44_Part_6', 'Q45_Part_2', 'Q45_Part_3', 'Q45_Part_4', 'Q45_Part_5'],\n",
      "      dtype='object', length=161)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Time from Start to Finish (seconds)',\n",
       " 'Q1_Female',\n",
       " 'Q1_Male',\n",
       " 'Q2_18-21',\n",
       " 'Q2_22-24',\n",
       " 'Q2_25-29',\n",
       " 'Q2_30-34',\n",
       " 'Q2_35-39',\n",
       " 'Q2_40-44',\n",
       " 'Q3_Brazil',\n",
       " 'Q3_China',\n",
       " 'Q3_Germany',\n",
       " 'Q3_India',\n",
       " 'Q3_Other',\n",
       " 'Q3_Russia',\n",
       " 'Q3_United States of America',\n",
       " 'Q4_Bachelor’s degree',\n",
       " 'Q4_Doctoral degree',\n",
       " 'Q4_Master’s degree',\n",
       " 'Q5_A business discipline (accounting, economics, finance, etc.)',\n",
       " 'Q5_Computer science (software engineering, etc.)',\n",
       " 'Q5_Engineering (non-computer focused)',\n",
       " 'Q5_Mathematics or statistics',\n",
       " 'Q5_Physics or astronomy',\n",
       " 'Q6_Business Analyst',\n",
       " 'Q6_Consultant',\n",
       " 'Q6_Data Analyst',\n",
       " 'Q6_Data Scientist',\n",
       " 'Q6_Other',\n",
       " 'Q6_Research Scientist',\n",
       " 'Q6_Software Engineer',\n",
       " 'Q6_Student',\n",
       " 'Q7_Academics/Education',\n",
       " 'Q7_Accounting/Finance',\n",
       " 'Q7_Computers/Technology',\n",
       " 'Q7_I am a student',\n",
       " 'Q7_Medical/Pharmaceutical',\n",
       " 'Q7_Online Service/Internet-based Services',\n",
       " 'Q8_0-1',\n",
       " 'Q8_1-2',\n",
       " 'Q8_10-15',\n",
       " 'Q8_2-3',\n",
       " 'Q8_3-4',\n",
       " 'Q8_4-5',\n",
       " 'Q8_5-10',\n",
       " 'Q10_I do not know',\n",
       " 'Q10_No (we do not use ML methods)',\n",
       " 'Q10_We are exploring ML methods (and may one day put a model into production)',\n",
       " 'Q10_We have well established ML methods (i.e., models in production for more than 2 years)',\n",
       " 'Q10_We recently started using ML methods (i.e., models in production for less than 2 years)',\n",
       " 'Q10_We use ML methods for generating insights (but do not put working models into production)',\n",
       " 'Q12_MULTIPLE_CHOICE_Advanced statistical software (SPSS, SAS, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Basic statistical software (Microsoft Excel, Google Sheets, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Business intelligence software (Salesforce, Tableau, Spotfire, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Cloud-based data software & APIs (AWS, GCP, Azure, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Local or hosted development environments (RStudio, JupyterLab, etc.)',\n",
       " 'Q12_MULTIPLE_CHOICE_Other',\n",
       " 'Q17_Python',\n",
       " 'Q17_R',\n",
       " 'Q17_SQL',\n",
       " 'Q18_Python',\n",
       " 'Q18_R',\n",
       " 'Q20_Scikit-Learn',\n",
       " 'Q20_TensorFlow',\n",
       " 'Q22_Matplotlib',\n",
       " 'Q22_Seaborn',\n",
       " 'Q22_ggplot2',\n",
       " 'Q23_1% to 25% of my time',\n",
       " 'Q23_25% to 49% of my time',\n",
       " 'Q23_50% to 74% of my time',\n",
       " 'Q23_75% to 99% of my time',\n",
       " 'Q24_1-2 years',\n",
       " 'Q24_3-5 years',\n",
       " 'Q24_5-10 years',\n",
       " 'Q24_< 1 year',\n",
       " 'Q25_1-2 years',\n",
       " 'Q25_2-3 years',\n",
       " 'Q25_3-4 years',\n",
       " 'Q25_< 1 year',\n",
       " 'Q25_I have never studied machine learning but plan to learn in the future',\n",
       " 'Q32_Numerical Data',\n",
       " 'Q32_Tabular Data',\n",
       " 'Q32_Text Data',\n",
       " 'Q32_Time Series Data',\n",
       " 'Q37_Coursera',\n",
       " 'Q37_DataCamp',\n",
       " 'Q40_Independent projects are equally important as academic achievements',\n",
       " 'Q40_Independent projects are much more important than academic achievements',\n",
       " 'Q40_Independent projects are slightly more important than academic achievements',\n",
       " 'Q43_0',\n",
       " 'Q43_0-10',\n",
       " 'Q43_10-20',\n",
       " 'Q43_20-30',\n",
       " 'Q46_0',\n",
       " 'Q46_0-10',\n",
       " 'Q46_10-20',\n",
       " 'Q46_90-100',\n",
       " 'Q48_I am confident that I can understand and explain the outputs of many but not all ML models',\n",
       " 'Q48_I view ML models as \"black boxes\" but I am confident that experts are able to explain model outputs',\n",
       " 'Q11_Part_1',\n",
       " 'Q11_Part_2',\n",
       " 'Q11_Part_3',\n",
       " 'Q11_Part_4',\n",
       " 'Q11_Part_5',\n",
       " 'Q11_Part_6',\n",
       " 'Q13_Part_1',\n",
       " 'Q13_Part_2',\n",
       " 'Q13_Part_3',\n",
       " 'Q13_Part_4',\n",
       " 'Q13_Part_6',\n",
       " 'Q13_Part_7',\n",
       " 'Q13_Part_8',\n",
       " 'Q13_Part_9',\n",
       " 'Q13_Part_10',\n",
       " 'Q13_Part_11',\n",
       " 'Q13_Part_12',\n",
       " 'Q13_Part_13',\n",
       " 'Q14_Part_1',\n",
       " 'Q14_Part_2',\n",
       " 'Q14_Part_9',\n",
       " 'Q14_Part_10',\n",
       " 'Q15_Part_1',\n",
       " 'Q15_Part_2',\n",
       " 'Q15_Part_3',\n",
       " 'Q15_Part_6',\n",
       " 'Q27_Part_1',\n",
       " 'Q27_Part_2',\n",
       " 'Q27_Part_6',\n",
       " 'Q27_Part_9',\n",
       " 'Q27_Part_19',\n",
       " 'Q28_Part_42',\n",
       " 'Q29_Part_9',\n",
       " 'Q29_Part_10',\n",
       " 'Q29_Part_11',\n",
       " 'Q29_Part_12',\n",
       " 'Q29_Part_13',\n",
       " 'Q30_Part_24',\n",
       " 'Q33_Part_1',\n",
       " 'Q33_Part_2',\n",
       " 'Q33_Part_3',\n",
       " 'Q33_Part_4',\n",
       " 'Q33_Part_5',\n",
       " 'Q33_Part_6',\n",
       " 'Q33_Part_7',\n",
       " 'Q33_Part_8',\n",
       " 'Q33_Part_9',\n",
       " 'Q33_Part_10',\n",
       " 'Q39_Part_1',\n",
       " 'Q42_Part_1',\n",
       " 'Q42_Part_2',\n",
       " 'Q42_Part_3',\n",
       " 'Q42_Part_4',\n",
       " 'Q44_Part_1',\n",
       " 'Q44_Part_2',\n",
       " 'Q44_Part_3',\n",
       " 'Q44_Part_4',\n",
       " 'Q44_Part_6',\n",
       " 'Q45_Part_2',\n",
       " 'Q45_Part_3',\n",
       " 'Q45_Part_4',\n",
       " 'Q45_Part_5']"
      ]
     },
     "execution_count": 414,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(selected_feat)\n",
    "\n",
    "slfeatures = selected_feat.values.tolist()\n",
    "\n",
    "slfeatures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 415,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8904, 161)\n",
      "(8904, 1)\n"
     ]
    }
   ],
   "source": [
    "concateddf = concateddf[slfeatures]\n",
    "print(concateddf.shape)\n",
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MODEL IMPLEMENTATION : LOGISTIC REGRESSION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 416,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7123, 161) (7123, 1)\n",
      "(1781, 161) (1781, 1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "logmodel = LogisticRegression()\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(concateddf, y, test_size=0.20, random_state=42)\n",
    "\n",
    "print(X_train.shape, y_train.shape)\n",
    "print(X_test.shape, y_test.shape)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now using K fold Classifer to check for accuracy\n",
    "\n",
    "The default C value is 1.0 in this case."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### IMPORTANT NOTE: \n",
    " Now performing only in training data set. \n",
    " For cross-validation and hyperparameter the dataset used was Xtrain. This is done to make sure that the model is not trained on the test data. This aids in keeping the test data separate to make the model is generalized not overfitting to the training data.\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 417,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.36044880785413747\n",
      "0.36185133239831696\n",
      "0.3758765778401122\n",
      "0.37359550561797755\n",
      "0.4297752808988764\n",
      "0.35814606741573035\n",
      "0.36657303370786515\n",
      "0.3539325842696629\n",
      "0.4044943820224719\n",
      "0.42134831460674155\n",
      "Average Score: 0.421%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "logmodel = LogisticRegression()\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_train)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_train):\n",
    "    X_train1, X_test1 = X_train.values[train_idx], X_train.values[test_idx]\n",
    "    y_train1, y_test1 = y_train.values[train_idx], y_train.values[test_idx]\n",
    "    \n",
    "    X_train1 = scaler.fit_transform(X_train1)\n",
    "    X_test1 = scaler.transform(X_test1)\n",
    "    \n",
    "    logmodel.fit(X_train1, y_train1)\n",
    "    \n",
    "    predictions = logmodel.predict(X_test1)\n",
    "    prediction_prob = logmodel.predict_proba(X_test1)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test1)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print (\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 418,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0039303761931499155"
      ]
     },
     "execution_count": 418,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_predictions = logmodel.predict(X_test)\n",
    "accuracy_score(test_predictions,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The accuracy seems to be very low in the test set "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Plot the mean accuracy, the \"learning curve\", of the classifier on both the training and validation dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 419,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import learning_curve\n",
    "def plot_learning_curve(estimator, title, X_train, y_train, ylim=None, cv=None, n_jobs=1,\\\n",
    "                        train_sizes=np.linspace(.1, 1.0, 5), scoring='accuracy'):\n",
    "    \n",
    "    plt.figure(figsize=(10,6))\n",
    "    plt.title(title)\n",
    "    \n",
    "    if ylim is not None:\n",
    "        plt.ylim(*ylim)\n",
    "        \n",
    "    plt.xlabel(\"Training examples\")\n",
    "    plt.ylabel(scoring)\n",
    "    \n",
    "    train_sizes, train_scores, test_scores = learning_curve(estimator, X_train, y_train, cv=10, scoring=scoring, n_jobs=n_jobs, train_sizes=train_sizes)\n",
    "    train_scores_mean = np.mean(train_scores, axis=1)\n",
    "    train_scores_std = np.std(train_scores, axis=1)\n",
    "    test_scores_mean = np.mean(test_scores, axis=1)\n",
    "    test_scores_std = np.std(test_scores, axis=1)\n",
    "    \n",
    "    plt.grid()\n",
    "\n",
    "    plt.fill_between(train_sizes, train_scores_mean - train_scores_std,\\\n",
    "                     train_scores_mean + train_scores_std, alpha=0.1, \\\n",
    "                     color=\"r\")\n",
    "    plt.fill_between(train_sizes, test_scores_mean - test_scores_std,\\\n",
    "                     test_scores_mean + test_scores_std, alpha=0.1, color=\"g\")\n",
    "    \n",
    "    plt.plot(train_sizes, train_scores_mean, 'o-', color=\"r\",label=\"Training score\")\n",
    "    plt.plot(train_sizes, test_scores_mean, 'o-', color=\"g\", label=\"Cross-validation score\")\n",
    "    plt.legend(loc=\"best\")\n",
    "    \n",
    "    return plt\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 420,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'matplotlib.pyplot' from 'C:\\\\Users\\\\user\\\\Anaconda3\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>"
      ]
     },
     "execution_count": 420,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plot_learning_curve(logmodel,'Logistic Regression', X_train, y_train, cv=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  BIAS VARIANCE TRADE-OFF:\n",
    "\n",
    "Plot learning curve has been plotted to know whether the model has high bias or high variance and how to improve the model performance. We can minimise the training error by decreasing the bias. And variance can be reduced by decreasing the difference between the training and testing error.\n",
    "\n",
    "If the model has high bias, we should try adding more features which increases the model complexity and decrease the regularisation parameter lambda.\n",
    "\n",
    "If the model has high variance as seen from above , we should try decreasing the set of features and increase the regularisation parameter lambda.\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### MODEL TUNING USING GRID SEARCH CV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 421,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "# param_grid = {'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000] }\n",
    "\n",
    "\n",
    "\n",
    "# clf1 = GridSearchCV(LogisticRegression(penalty='l2'), param_grid,cv=10)\n",
    "# best_clf = clf1.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# best_clf.best_params_\n",
    "\n",
    "                            \n",
    "param_grid = {'C': [0.1, 1, 0.5,0.6,0.7,0.8,0.9,2,3,4,5,6,7,8,9]}\n",
    "clf= GridSearchCV(LogisticRegression(penalty='l2'), param_grid)\n",
    "gridmodel=clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 422,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 0.1}"
      ]
     },
     "execution_count": 422,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gridmodel.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 423,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3703495718096308"
      ]
     },
     "execution_count": 423,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gridmodel.best_score_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 424,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3593486805165637"
      ]
     },
     "execution_count": 424,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Predict values based on new parameters\n",
    "y_pred_acc = gridmodel.predict(X_test)\n",
    "accuracy_score(y_pred_acc,y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "#### So now we change the default value of C to 0.1 as it is the best parameter observed among C values. Now we implement the model again and see the accuracy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MODEL IMPLEMENTATION 2:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 435,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.364656381486676\n",
      "0.37307152875175315\n",
      "0.3800841514726508\n",
      "0.37359550561797755\n",
      "0.4396067415730337\n",
      "0.3651685393258427\n",
      "0.3637640449438202\n",
      "0.3651685393258427\n",
      "0.4002808988764045\n",
      "0.4143258426966292\n",
      "Accuracy percentage on training data: Average Score: 0.414%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "logmodel1 = LogisticRegression( C = 0.1 )\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_train)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_train):\n",
    "    X_train1, X_test1 = X_train.values[train_idx], X_train.values[test_idx]\n",
    "    y_train1, y_test1 = y_train.values[train_idx], y_train.values[test_idx]\n",
    "    \n",
    "    X_train1 = scaler.fit_transform(X_train1)\n",
    "    X_test1 = scaler.transform(X_test1)\n",
    "    \n",
    "    logmodel1.fit(X_train1, y_train1)\n",
    "    \n",
    "    predictions = logmodel1.predict(X_test1)\n",
    "    prediction_prob = logmodel1.predict_proba(X_test1)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test1)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print ('Accuracy percentage on training data:',\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Accuracy percentage when perfomed on unseen test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 436,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy percentage: 4.491858506457047 %\n"
     ]
    }
   ],
   "source": [
    "test_predictions = logmodel1.predict(X_test)\n",
    "print('Accuracy percentage:',(accuracy_score(test_predictions,y_test)*100), '%')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The accuracy increased when using the optimal parameter of C =0.1\n",
    "\n",
    "The optimal C obtained after tuning was 0.1. Since the C is over the lower side, this signigies that the model is penalized for the higher values of weights. By default C=1, after tuning the model accuracy improved for optimal C value of 0.1. Since, the weight of regulatization C was 0.6, the model was overfitting which was brought to optimal fit by hyperparameter tuning."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the graph on the new optimised model with the optimum parameter C = 0.1 has been plotted. It can be seen that the difference between the training and cross-validation score is decreased a bit. Hence decreasing the variance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 437,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<module 'matplotlib.pyplot' from 'C:\\\\Users\\\\user\\\\Anaconda3\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>"
      ]
     },
     "execution_count": 437,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_learning_curve(logmodel1,'Logistic Regression', X_train, y_train, cv=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Now implementing the optimal model with the test data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 429,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.4022346368715084\n",
      "0.38764044943820225\n",
      "0.3651685393258427\n",
      "0.3202247191011236\n",
      "0.2808988764044944\n",
      "0.33707865168539325\n",
      "0.398876404494382\n",
      "0.3146067415730337\n",
      "0.38764044943820225\n",
      "0.3539325842696629\n",
      "Accuracy percentage on training data: Average Score: 0.354%(0.0%)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "logmodel1 = LogisticRegression( C = 0.1 )\n",
    "scaler = StandardScaler()\n",
    "kfold = KFold(n_splits=10)\n",
    "kfold.get_n_splits(X_test)\n",
    "\n",
    "accuracy = np.zeros(10)\n",
    "np_idx = 0\n",
    "\n",
    "for train_idx, test_idx in kfold.split(X_test):\n",
    "    X_train2, X_test2 = X_test.values[train_idx], X_test.values[test_idx]\n",
    "    y_train2, y_test2 = y_test.values[train_idx], y_test.values[test_idx]\n",
    "    \n",
    "    X_train2 = scaler.fit_transform(X_train2)\n",
    "    X_test2 = scaler.transform(X_test2)\n",
    "    \n",
    "    logmodel1.fit(X_train2, y_train2)\n",
    "    \n",
    "    predictions = logmodel1.predict(X_test2)\n",
    "    prediction_prob1 = logmodel1.predict_proba(X_test2)\n",
    "    \n",
    "    ACC = accuracy_score(predictions,y_test2)\n",
    "    np_idx += 1\n",
    "    \n",
    "    print (ACC)\n",
    "   \n",
    "\n",
    "print ('Accuracy percentage on training data:',\"Average Score: {}%({}%)\".format(round(np.mean(ACC),3),round(np.std(ACC),3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### TESTING AND DISCUSSION:\n",
    "\n",
    "The model perfroms bad in test set and has decreased its percentage of accuracy but not much . So the model is a normal fit. Not underfit or overfit."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The probability for both training and testing data is plotted below using a bar plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 441,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0.09276763 0.02293585 0.11908122 ... 0.09414349 0.05400643 0.05127523]\n",
      " [0.29523908 0.1560379  0.01654493 ... 0.08159741 0.09771885 0.05143671]\n",
      " [0.60623028 0.14820737 0.00236972 ... 0.00642452 0.00492968 0.00357218]\n",
      " ...\n",
      " [0.74873515 0.05928066 0.00822559 ... 0.00881654 0.01404224 0.0051648 ]\n",
      " [0.007175   0.07977127 0.18182329 ... 0.18334946 0.12863968 0.05928672]\n",
      " [0.54039769 0.1955746  0.00225146 ... 0.00455249 0.00297316 0.0015261 ]]\n",
      "[[6.22219141e-01 8.80115981e-02 4.25819686e-02 ... 4.48890823e-02\n",
      "  5.17066762e-03 3.39413859e-02]\n",
      " [2.30231570e-02 1.38766271e-01 3.86165278e-03 ... 1.03017421e-01\n",
      "  8.94730120e-04 9.93707328e-03]\n",
      " [7.19523998e-02 4.25783233e-02 3.59975038e-01 ... 2.67396772e-01\n",
      "  2.06894430e-01 2.15460389e-03]\n",
      " ...\n",
      " [7.74414294e-01 1.88008341e-02 1.35761715e-04 ... 1.04064701e-02\n",
      "  1.00247533e-02 7.02448088e-03]\n",
      " [5.74654618e-02 5.61566285e-03 2.50869723e-03 ... 7.91057348e-03\n",
      "  4.13855061e-01 5.38513669e-04]\n",
      " [4.01336117e-01 5.93315263e-02 1.05502033e-05 ... 1.08453135e-04\n",
      "  8.92074710e-03 1.53167908e-03]]\n"
     ]
    }
   ],
   "source": [
    "print(prediction_prob)\n",
    "print(prediction_prob1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 431,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = ['0-10,000', '10-20,000', '20-30,000', '30-40,000', '40-50,000', '50-60,000','60-70,000', '70-80,000', '80-90,000', '90-100,000', '100-125,000', '125-150,000', '150-200,000','200-250,000', '250-300,000', '300-400,000','400-500,000', '500,000+' ]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The plots have been plotted for person 2 on the dataset on both the training and testing datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 442,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "training_plot = pd.DataFrame(prediction_prob, columns = columns)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize = (10,6))\n",
    "plt.bar(columns, training_plot.loc[1])\n",
    "plt.xlabel('salary')\n",
    "plt.ylabel('probabality')\n",
    "plt.xticks(\n",
    "    rotation=45, \n",
    "    horizontalalignment='right',\n",
    "    fontweight='light',\n",
    "    fontsize='x-large'  )\n",
    "plt.title('training plot')\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 443,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "testing_plot = pd.DataFrame(prediction_prob1, columns = columns)\n",
    "\n",
    "plt.figure(figsize = (10,6))\n",
    "plt.bar(columns, testing_plot.loc[1])\n",
    "plt.xlabel('salary')\n",
    "plt.ylabel('probabality')\n",
    "plt.xticks(\n",
    "    rotation=45, \n",
    "    horizontalalignment='right',\n",
    "    fontweight='light',\n",
    "    fontsize='x-large'  \n",
    ")\n",
    "plt.title('testing plot')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
